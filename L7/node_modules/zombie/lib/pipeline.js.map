{"version":3,"sources":["pipeline.js"],"names":["_","require","assert","Bluebird","Fetch","File","Headers","isArray","Path","Request","resourceLoader","URL","Utils","Pipeline","Array","constructor","browser","_browser","handler","_default","push","_fetch","input","init","request","emit","_runPipeline","then","response","time","Date","now","catch","error","_debug","stack","TypeError","message","_getOriginalResponse","_prepareResponse","requestHandlers","getRequestHandlers","concat","makeHTTPRequest","reduce","lastResponse","requestHandler","hasOwnProperty","originalResponse","responseHandlers","getResponseHandlers","responseHandler","addHandler","call","length","removeHandler","index","indexOf","splice","result","i","normalizeURL","document","url","resolve","format","site","mergeHeaders","headers","each","value","name","append","has","set","userAgent","host","parse","authenticate","username","password","log","base64","Buffer","toString","protocol","hostname","pathname","method","Response","status","filename","normalize","decodeURI","exists","existsSync","stream","createReadStream","cookies","cookieHeader","serialize","consumeBody","test","_consume","body","httpRequest","uri","toObject","proxy","jar","followRedirect","strictSSL","localAddress","reject","on","arrayOfHeaders","item","statusCode","handleHeaders","handleCookies","newCookies","getAll","update","handleRedirect","redirect","location","get","_redirectCount","delete","pipeline","module","exports"],"mappings":"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","file":"pipeline.js","sourcesContent":["const _               = require('lodash');\nconst assert          = require('assert');\nconst Bluebird        = require('bluebird');\nconst Fetch           = require('./fetch');\nconst File            = require('fs');\nconst { Headers }     = require('./fetch');\nconst { isArray }     = require('util');\nconst Path            = require('path');\nconst Request         = require('request');\nconst resourceLoader  = require('jsdom/lib/jsdom/browser/resource-loader');\nconst URL             = require('url');\nconst Utils           = require('jsdom/lib/jsdom/utils');\n\n\n// Pipeline is sequence of request/response handlers that are used to prepare a\n// request, make the request, and process the response.\nclass Pipeline extends Array {\n\n  constructor(browser) {\n    super();\n    this._browser = browser;\n    for (let handler of Pipeline._default)\n      this.push(handler);\n  }\n\n  _fetch(input, init) {\n    const request   = new Fetch.Request(input, init);\n    const browser   = this._browser;\n    browser.emit('request', request);\n\n    return this\n      ._runPipeline(request)\n      .then(function(response) {\n        response.time     = Date.now();\n        response.request  = request;\n        browser.emit('response', request, response);\n        return response;\n      })\n      .catch(function(error) {\n        browser._debug('Resource error', error.stack);\n        throw new TypeError(error.message);\n      });\n  }\n\n  _runPipeline(request) {\n    return this\n      ._getOriginalResponse(request)\n      .then((response)=> {\n        return this._prepareResponse(request, response);\n      });\n  }\n\n  _getOriginalResponse(request) {\n    const browser         = this._browser;\n    const requestHandlers = this.getRequestHandlers().concat(Pipeline.makeHTTPRequest);\n\n    return Bluebird.reduce(requestHandlers, function(lastResponse, requestHandler) {\n        return lastResponse || requestHandler(browser, request);\n      }, null)\n      .then(function(response) {\n        assert(response && response.hasOwnProperty('statusText'), 'Request handler must return a response');\n        return response;\n      });\n  }\n\n  _prepareResponse(request, originalResponse) {\n    const browser           = this._browser;\n    const responseHandlers  = this.getResponseHandlers();\n\n    return Bluebird.reduce(responseHandlers, function(lastResponse, responseHandler) {\n        return responseHandler(browser, request, lastResponse);\n      }, originalResponse)\n      .then(function(response) {\n        assert(response && response.hasOwnProperty('statusText'), 'Response handler must return a response');\n        return response;\n      });\n  }\n\n\n  // -- Handlers --\n\n  // Add a request or response handler.  This handler will only be used by this\n  // pipeline instance (browser).\n  addHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    assert(handler.length === 2 || handler.length === 3, 'Handler function takes 2 (request handler) or 3 (reponse handler) arguments');\n    this.push(handler);\n  }\n\n  // Remove a request or response handler.\n  removeHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    const index = this.indexOf(handler);\n    if (index > -1)\n      this.splice(index,1);\n  }\n\n  // Add a request or response handler.  This handler will be used by any new\n  // pipeline instance (browser).\n  static addHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    assert(handler.length === 2 || handler.length === 3, 'Handler function takes 2 (request handler) or 3 (response handler) arguments');\n    this._default.push(handler);\n  }\n\n  // Remove a request or response handler.\n  static removeHandler(handler) {\n    assert(handler.call, 'Handler must be a function');\n    const index = this._default.indexOf(handler);\n    if (index > -1)\n      this._default.splice(index,1);\n  }\n\n  // Get array of request handlers\n  getRequestHandlers() {\n    // N.B. inheriting from an Array is slightly broken, so just iterate manually\n    const result = [];\n    for (let i = 0; i < this.length; i++)\n      if (this[i].length === 2)\n        result.push(this[i]);\n    return result;\n  }\n\n  // Get array of request handlers\n  getResponseHandlers() {\n    // N.B. inheriting from an Array is slightly broken, so just iterate manually\n    const result = [];\n    for (let i = 0; i < this.length; i++)\n      if (this[i].length === 3)\n        result.push(this[i]);\n    return result;\n  }\n\n\n  // -- Prepare request --\n\n  // This handler normalizes the request URL.\n  //\n  // It turns relative URLs into absolute URLs based on the current document URL\n  // or base element, or if no document open, based on browser.site property.\n  static normalizeURL(browser, request) {\n    if (browser.document)\n    // Resolve URL relative to document URL/base, or for new browser, using\n    // Browser.site\n      request.url = URL.resolve(browser.document.URL, URL.format(request.url));\n    else\n      // TODO check this\n      request.url = URL.resolve(browser.site || 'http://localhost', request.url);\n  }\n\n\n  // This handler mergers request headers.\n  //\n  // It combines headers provided in the request with custom headers defined by\n  // the browser (user agent, authentication, etc).\n  //\n  // It also normalizes all headers by down-casing the header names.\n  static mergeHeaders(browser, request) {\n    if (browser.headers)\n      _.each(browser.headers, (value, name)=> {\n        request.headers.append(name, browser.headers[name]);\n      });\n    if (!request.headers.has('User-Agent'))\n      request.headers.set('User-Agent', browser.userAgent);\n\n    // Always pass Host: from request URL\n    const { host } = URL.parse(request.url);\n    request.headers.set('Host', host);\n\n    // HTTP Basic authentication\n    const authenticate = { host, username: null, password: null };\n    browser.emit('authenticate', authenticate);\n    const { username, password } = authenticate;\n    if (username && password) {\n      browser.log(`Authenticating as ${username}:${password}`);\n      const base64 = new Buffer(`${username}:${password}`).toString('base64');\n      request.headers.set('authorization',  `Basic ${base64}`);\n    }\n  }\n\n\n  // -- Retrieve actual resource --\n\n  // Used to perform HTTP request (also supports file: resources).  This is always\n  // the last request handler.\n  static makeHTTPRequest(browser, request) {\n    const { url } = request;\n    const { protocol, hostname, pathname } = URL.parse(url);\n\n    if (protocol === 'file:') {\n\n      // If the request is for a file:// descriptor, just open directly from the\n      // file system rather than getting node's http (which handles file://\n      // poorly) involved.\n      if (request.method !== 'GET')\n        return new Fetch.Response('', { url, status: 405 });\n\n      const filename = Path.normalize(decodeURI(pathname));\n      const exists   = File.existsSync(filename);\n      if (exists) {\n        const stream = File.createReadStream(filename);\n        return new Fetch.Response(stream, { url, status: 200 });\n      } else\n        return new Fetch.Response('', { url, status: 404 });\n\n    }\n\n    // We're going to use cookies later when receiving response.\n    const { cookies }   = browser;\n    const cookieHeader  = cookies.serialize(hostname, pathname);\n    if (cookieHeader)\n      request.headers.append('Cookie', cookieHeader);\n\n    const consumeBody = /^POST|PUT/.test(request.method) && request._consume() || Promise.resolve(null);\n    return consumeBody\n      .then(function(body) {\n\n        const httpRequest = new Request({\n          method:         request.method,\n          uri:            request.url,\n          headers:        request.headers.toObject(),\n          proxy:          browser.proxy,\n          body,\n          jar:            false,\n          followRedirect: false,\n          strictSSL:      browser.strictSSL,\n          localAddress:   browser.localAddress || 0\n        });\n\n        return new Promise(function(resolve, reject) {\n          httpRequest\n            .on('response', (response)=> {\n              // Request returns an object where property name is header name,\n              // property value is either header value, or an array if header sent\n              // multiple times (e.g. `Set-Cookie`).\n              const arrayOfHeaders = _.reduce(response.headers, (headers, value, name)=> {\n                if (isArray(value))\n                  for (let item of value)\n                    headers.push([name, item]);\n                else\n                  headers.push([name, value]);\n                return headers;\n              }, []);\n\n              resolve(new Fetch.Response(response, {\n                url:        request.url,\n                status:     response.statusCode,\n                headers:    new Headers(arrayOfHeaders)\n              }));\n            })\n            .on('error', reject);\n        });\n\n      });\n  }\n\n\n  // -- Handle response --\n\n  static handleHeaders(browser, request, response) {\n    response.headers = new Headers(response.headers);\n    return response;\n  }\n\n  static handleCookies(browser, request, response) {\n    // Set cookies from response: call update() with array of headers\n    const { hostname, pathname } = URL.parse(request.url);\n    const newCookies = response.headers.getAll('Set-Cookie');\n    browser.cookies.update(newCookies, hostname, pathname);\n    return response;\n  }\n\n  static handleRedirect(browser, request, response) {\n    const { status }  = response;\n    if (status === 301 || status === 302 || status === 303 || status === 307 || status === 308) {\n      if (request.redirect === 'error')\n        return Fetch.Response.error();\n\n      const location = response.headers.get('Location');\n      if (location === null)\n        return response;\n\n      if (request._redirectCount >= 20)\n        return Fetch.Response.error();\n\n      browser.emit('redirect', request, response, location);\n      ++request._redirectCount;\n      if (status !== 307) {\n        request.method = 'GET';\n        request.headers.delete('Content-Type');\n        request.headers.delete('Content-Length');\n        request.headers.delete('Content-Transfer-Encoding');\n      }\n\n      // The Cookie header will be recomputed when the pipeline runs. This\n      // ensures that cookies can be invalidated by the redirect response.\n      request.headers.delete('Cookie');\n      // This request is referer for next\n      request.headers.set('Referer', request.url);\n      request.url = URL.resolve(request.url, location);\n      return browser.pipeline._runPipeline(request);\n    } else\n      return response;\n  }\n\n}\n\n\n// The default pipeline.  All new pipelines are instantiated with this set of\n// handlers.\nPipeline._default = [\n  Pipeline.normalizeURL,\n  Pipeline.mergeHeaders,\n  Pipeline.handleHeaders,\n  Pipeline.handleCookies,\n  Pipeline.handleRedirect\n];\n\nmodule.exports = Pipeline;\n"]}