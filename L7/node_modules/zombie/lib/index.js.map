{"version":3,"sources":["index.js"],"names":["require","assert","Assert","Bluebird","Tabs","Console","Cookies","debug","DOM","EventEmitter","EventLoop","format","Fetch","File","Mime","ms","Path","Pipeline","reroute","Storages","Tough","Cookie","URL","Utils","idlUtils","VERSION","__dirname","version","BROWSER_OPTIONS","DEFAULT_FEATURES","MOUSE_EVENT_NAMES","Browser","constructor","options","cookies","console","referrer","tabs","pipeline","_eventLoop","errors","_storages","_windowInScope","_debug","on","level","message","silent","log","args","request","response","method","url","status","headers","get","document","location","href","eventName","window","name","winFocus","createEvent","initEvent","dispatchEvent","activeElement","elemFocus","elemBlur","winBlur","fn","delay","emit","interval","timedOut","error","push","stack","hasOwnProperty","extension","_extensions","hasFeature","defaultValue","features","split","indexOf","fork","Error","current","open","length","wait","callback","arguments","duration","waitDuration","toString","completionFromElement","element","querySelector","completionFunction","function","promisify","bind","waitForServer","once","resolve","_wait","promise","lazyResolve","then","resolved","rejected","catch","fire","selector","target","query","eventType","event","tagName","_click","click","queryAll","context","documentElement","Array","isArray","Element","elements","querySelectorAll","$$","text","map","elem","textContent","join","trim","replace","source","html","outerHTML","xpath","expression","evaluate","XPathResult","ANY_TYPE","body","destroy","closeAll","visit","site","test","close","load","link","clickLink","history","back","reload","saveHistory","save","loadHistory","serialized","field","getAttribute","label","forAttr","getElementById","focus","fill","value","disabled","readonly","descriptor","prototype","set","call","blur","_setCheckbox","type","checked","check","uncheck","choose","escape","_findOption","option","select","selectOption","selected","iterateNext","unselect","unselectOption","multiple","attach","filename","stat","statSync","file","basename","getType","size","Object","defineProperty","oldFiles","files","button","inputs","input","pressButton","impl","implForWrapper","getCookie","identifier","allProperties","_cookieIdentifier","domain","cookie","_cookieProperties","deleteCookie","delete","setCookie","nameOrOptions","hostname","path","secure","httpOnly","expires","deleteCookies","deleteAll","saveCookies","Date","toISOString","sort","cookieCompare","loadCookies","line","parse","properties","key","Infinity","pathname","localStorage","host","local","sessionStorage","session","saveStorage","loadStorage","code","_evaluate","fetch","init","_fetch","resources","_request","_response","statusCode","success","redirected","_redirectCount","_enableDebugging","dump","output","process","stdout","indent","lines","write","slice","browser","localhost","extend","enabled","_debugEnabled","enable","Headers","Request","Response","proxy","strictSSL","localAddress","userAgent","language","runScripts","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["require('jsdom');  // work-around for node.js import of jsdom Windows.js before jsdom living module\n\nconst assert            = require('assert');\nconst Assert            = require('./assert');\nconst Bluebird          = require('bluebird');\nconst Tabs              = require('./tabs');\nconst Console           = require('./console');\nconst Cookies           = require('./cookies');\nconst debug             = require('debug');\nconst DOM               = require('./dom');\nconst { EventEmitter }  = require('events');\nconst EventLoop         = require('./eventloop');\nconst { format }        = require('util');\nconst Fetch             = require('./fetch');\nconst File              = require('fs');\nconst Mime              = require('mime');\nconst ms                = require('ms');\nconst Path              = require('path');\nconst Pipeline          = require('./pipeline');\nconst reroute           = require('./reroute');\nconst Storages          = require('./storage');\nconst Tough             = require('tough-cookie');\nconst { Cookie }        = Tough;\nconst URL               = require('url');\nconst Utils             = require('jsdom/lib/jsdom/utils');\nconst { idlUtils }    = require('./dom/impl');\n\n// Version number.  We get this from package.json.\nconst VERSION = require(`${__dirname}/../package.json`).version;\n\n// Browser options you can set when creating new browser, or on browser instance.\nconst BROWSER_OPTIONS  = ['features', 'headers', 'waitDuration',\n                          'proxy', 'referrer', 'silent', 'site', 'strictSSL', 'userAgent',\n                          'language', 'runScripts', 'localAddress'];\n\n// These features are set on/off by default.\n// Note that default values are actually prescribed where they are used,\n// by calling hasFeature with name and default\nconst DEFAULT_FEATURES  = 'scripts no-css no-img iframe';\n\nconst MOUSE_EVENT_NAMES = ['mousedown', 'mousemove', 'mouseup'];\n\n\n// Use the browser to open up new windows and load documents.\n//\n// The browser maintains state for cookies and local storage.\nclass Browser extends EventEmitter {\n\n  constructor(options = {}) {\n    super();\n    // Used for assertions\n    this.assert     = new Assert(this);\n    this.cookies    = new Cookies();\n    // Shared by all windows.\n    this.console    = new Console(this);\n    // Start with no this referrer.\n    this.referrer   = null;\n    // Open tabs.\n    this.tabs       = new Tabs(this);\n    // New pipeline for this browser.\n    this.pipeline   = new Pipeline(this);\n\n    // The browser event loop.\n    this._eventLoop = new EventLoop(this);\n\n    // Returns all errors reported while loading this window.\n    this.errors     = [];\n\n    this._storages  = new Storages();\n\n    // The window that is currently in scope, some JS functions need this, e.g.\n    // when closing a window, you need to determine whether caller (window in\n    // scope) is same as window.opener\n    this._windowInScope = null;\n\n    this._debug         = Browser._debug;\n\n    // Message written to window.console.  Level is log, info, error, etc.\n    //\n    // All output goes to stdout, except when browser.silent = true and output\n    // only shown when debugging (DEBUG=zombie).\n    this\n      .on('console', (level, message)=> {\n        if (this.silent)\n          this._debug(`>> ${message}`);\n        else\n          console.log(message);\n      })\n      .on('log', (...args)=> {\n        // Message written to browser.log.\n        this._debug(format(...args));\n      });\n\n    // Logging resources\n    this\n      .on('request', (request)=> request)\n      .on('response', (request, response)=> {\n        this._debug('%s %s => %s', request.method, response.url, response.status);\n      })\n      .on('redirect', (request, response)=> {\n        this._debug('%s %s => %s %s', request.method, request.url, response.status, response.headers.get('Location'));\n      })\n      .on('loaded', (document)=> {\n        this._debug('Loaded document %s', document.location.href);\n      })\n      .on('xhr', (eventName, url)=> {\n        this._debug('XHR %s %s', eventName, url);\n      });\n\n    // Logging windows/tabs/navigation\n    this\n      .on('opened', (window)=> {\n        this._debug('Opened window %s %s', window.location.href, window.name || '');\n      })\n      .on('closed', (window)=> {\n        this._debug('Closed window %s %s', window.location.href, window.name || '');\n      });\n\n    // Switching tabs/windows fires blur/focus event on active window/element\n    this\n      .on('active', (window)=> {\n        // Window becomes inactive\n        const winFocus = window.document.createEvent('HTMLEvents');\n        winFocus.initEvent('focus', false, false);\n        window.dispatchEvent(winFocus);\n\n        if (window.document.activeElement) {\n          const elemFocus = window.document.createEvent('HTMLEvents');\n          elemFocus.initEvent('focus', false, false);\n          window.document.activeElement.dispatchEvent(elemFocus);\n        }\n      })\n      .on('inactive', (window)=> {\n        // Window becomes inactive\n        if (window.document.activeElement) {\n          const elemBlur = window.document.createEvent('HTMLEvents');\n          elemBlur.initEvent('blur', false, false);\n          window.document.activeElement.dispatchEvent(elemBlur);\n        }\n        const winBlur = window.document.createEvent('HTMLEvents');\n        winBlur.initEvent('blur', false, false);\n        window.dispatchEvent(winBlur);\n      });\n\n    // Logging navigation\n    this\n      .on('link', (url)=> {\n        this._debug('Follow link to %s', url);\n      })\n      .on('submit', (url)=> {\n        this._debug('Submit form to %s', url);\n      });\n\n    // Logging event loop\n    this._eventLoop\n      .on('setTimeout', (fn, delay)=> {\n        this._debug('Fired setTimeout after %dms delay', delay);\n        this.emit('setTimeout', fn, delay);\n      })\n      .on('setInterval', (fn, interval)=> {\n        this._debug('Fired setInterval every %dms', interval);\n        this.emit('setInterval', fn, interval);\n      })\n      .on('serverEvent', ()=> {\n        this._debug('Server initiated event');\n        this.emit('serverEvent');\n      })\n      .on('idle', (timedOut)=> {\n        if (timedOut)\n          this._debug('Event loop timed out');\n        else\n          this._debug('Event loop is empty');\n        this.emit('idle');\n      })\n      .on('error', (error)=> {\n        this.emit('error', error);\n      });\n\n    // Make sure we don't blow up Node when we get a JS error, but dump error to console.  Also, catch any errors\n    // reported while processing resources/JavaScript.\n    this.on('error', (error)=> {\n      this.errors.push(error);\n      this._debug(error.stack);\n    });\n\n    // Sets the browser options.\n    options = options || {};\n    for (let name of BROWSER_OPTIONS)\n      this[name] = options.hasOwnProperty(name) ?\n        options[name] :\n        (Browser[name] || null);\n\n    // Last, run all extensions in order.\n    for (let extension of Browser._extensions)\n      extension(this);\n  }\n\n\n  // Returns true if the given feature is enabled.\n  //\n  // If the feature is listed, then it is enabled.  If the feature is listed\n  // with \"no-\" prefix, then it is disabled.  If the feature is missing, return\n  // the default value.\n  hasFeature(name, defaultValue = true) {\n    const features = (this.features || '').split(/\\s+/);\n    return ~features.indexOf(name) ? true :\n           ~features.indexOf(`no-${name}`) ? false :\n           defaultValue;\n  }\n\n\n  // Return a new browser with a snapshot of this browser's state.\n  // Any changes to the forked browser's state do not affect this browser.\n  fork() {\n    throw new Error('Not implemented');\n  }\n\n\n  // Windows\n  // -------\n\n  // Returns the currently open window\n  get window() {\n    return this.tabs.current;\n  }\n\n  // Open new browser window.\n  open({ url, name, referrer } = {}) {\n    return this.tabs.open({ url, name, referrer });\n  }\n\n  // browser.error => Error\n  //\n  // Returns the last error reported while loading this window.\n  get error() {\n    return this.errors[this.errors.length - 1];\n  }\n\n\n  // Events\n  // ------\n\n  // Waits for the browser to complete loading resources and processing JavaScript events.\n  //\n  // Accepts two parameters, both optional:\n  // options   - Options that determine how long to wait (see below)\n  // callback  - Called with error or null and browser\n  //\n  // To determine how long to wait:\n  // duration  - Do not wait more than this duration (milliseconds or string of\n  //             the form \"5s\"). Defaults to \"5s\" (see Browser.waitDuration).\n  // element   - Stop when this element(s) appear in the DOM.\n  // function  - Stop when function returns true; this function is called with\n  //             the active window and expected time to the next event (0 to\n  //             Infinity).\n  //\n  // As a convenience you can also pass the duration directly.\n  //\n  // Without a callback, this method returns a promise.\n  wait(options, callback) {\n    assert(this.window, new Error('No window open'));\n    if (arguments.length === 1 && typeof options === 'function')\n      [callback, options] = [options, null];\n    assert(!callback || typeof callback === 'function', 'Second argument expected to be a callback function or null');\n\n    // Support all sort of shortcuts for options. Unofficial.\n    const duration =\n      (typeof options === 'number') ? options :\n      (typeof options === 'string') ? options :\n      (options && options.duration || this.waitDuration || '5s');\n    // Support 500 (ms) as well as \"5s\"\n    const waitDuration = ms(duration.toString());\n\n    function completionFromElement(element) {\n      return function(window) {\n        return !!window.document.querySelector(element);\n      };\n    }\n\n    const completionFunction =\n      (typeof options === 'function') ? options :\n      (options && options.element) ? completionFromElement(options.element) :\n      (options && options.function);\n\n    const { _eventLoop } = this;\n    if (callback)\n      _eventLoop.wait(waitDuration, completionFunction, callback);\n    else\n      return Bluebird.promisify(_eventLoop.wait.bind(_eventLoop))(waitDuration, completionFunction);\n  }\n\n\n  // Waits for the browser to get a single event from any EventSource,\n  // then completes loading resources and processing JavaScript events.\n  //\n  // Accepts an optional callback which is called with error or nothing\n  //\n  // Without a callback, this method returns a promise.\n  waitForServer(options, callback) {\n    assert(this.window, new Error('No window open'));\n    if (arguments.length === 1 && typeof options === 'function')\n      [callback, options] = [options, null];\n\n    if (callback) {\n      this._eventLoop.once('serverEvent', ()=> {\n        this.wait(options, callback);\n      });\n      return null;\n    }\n\n    return new Promise((resolve)=> {\n      this._eventLoop.once('serverEvent', ()=> {\n        resolve(this.wait(options, null));\n      });\n    });\n  }\n\n\n  // Various methods use this with a callback, or return a lazy promise (e.g.\n  // visit, click, fire)\n  _wait(options, callback) {\n    if (callback) {\n      this.wait(options, callback);\n      return null;\n    }\n\n    let promise = null;\n    const lazyResolve = ()=> {\n      if (!promise)\n        promise = this.wait(options, null);\n      return promise;\n    };\n    // Returns equivalent of a promise that only starts evaluating when you\n    // call then() or catch() on it.\n    return {\n      then(resolved, rejected) {\n        return lazyResolve().then(resolved, rejected);\n      },\n      catch(rejected) {\n        return lazyResolve().then(null, rejected);\n      }\n    };\n  }\n\n\n  // Fire a DOM event.  You can use this to simulate a DOM event, e.g. clicking\n  // a link.  These events will bubble up and can be cancelled.  Like `wait`\n  // this method takes an optional callback and returns a promise.\n  //\n  // name - Even name (e.g `click`)\n  // target - Target element (e.g a link)\n  // callback - Called with error or nothing\n  //\n  // If called without callback, returns a promise\n  fire(selector, eventName, callback) {\n    assert(this.window, 'No window open');\n    const target = this.query(selector);\n    assert(target && target.dispatchEvent, 'No target element (note: call with selector/element, event name and callback)');\n\n    const eventType = ~MOUSE_EVENT_NAMES.indexOf(eventName) ? 'MouseEvents' : 'HTMLEvents';\n    const event = this.document.createEvent(eventType);\n    event.initEvent(eventName, true, true);\n    target.dispatchEvent(event);\n    if (selector.tagName === 'BUTTON' || selector.tagName == 'INPUT') selector._click(event);\n    return this._wait(null, callback);\n  }\n\n  // Click on the element and returns a promise.\n  //\n  // selector - Element or CSS selector\n  // callback - Called with error or nothing\n  //\n  // If called without callback, returns a promise\n  click(selector, callback) {\n    return this.fire(selector, 'click', callback);\n  }\n\n  // Dispatch asynchronously.  Returns true if preventDefault was set.\n  dispatchEvent(selector, event) {\n    assert(this.window, 'No window open');\n    const target = this.query(selector);\n    return target.dispatchEvent(event);\n  }\n\n\n  // Accessors\n  // ---------\n\n  // browser.queryAll(selector, context?) => Array\n  //\n  // Evaluates the CSS selector against the document (or context node) and return array of nodes.\n  // (Unlike `document.querySelectorAll` that returns a node list).\n  queryAll(selector = 'html', context = this.document) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n\n    if (Array.isArray(selector))\n      return selector;\n    if (selector instanceof DOM.Element)\n      return [selector];\n    if (selector) {\n      const elements = context.querySelectorAll(selector);\n      return Array.from(elements);\n    } else\n      return [];\n  }\n\n  // browser.query(selector, context?) => Element\n  //\n  // Evaluates the CSS selector against the document (or context node) and return an element.\n  query(selector = 'html', context = this.document) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n\n    if (selector instanceof DOM.Element)\n      return selector;\n    return selector ? context.querySelector(selector) : context;\n  }\n\n  // WebKit offers this.\n  $$(selector, context) {\n    return this.query(selector, context);\n  }\n\n  // browser.querySelector(selector) => Element\n  //\n  // Select a single element (first match) and return it.\n  //\n  // selector - CSS selector\n  //\n  // Returns an Element or null\n  querySelector(selector) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n    return this.document.querySelector(selector);\n  }\n\n  // browser.querySelectorAll(selector) => NodeList\n  //\n  // Select multiple elements and return a static node list.\n  //\n  // selector - CSS selector\n  //\n  // Returns a NodeList or null\n  querySelectorAll(selector) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n    return this.document.querySelectorAll(selector);\n  }\n\n  // browser.text(selector, context?) => String\n  //\n  // Returns the text contents of the selected elements.\n  //\n  // selector - CSS selector (if missing, entire document)\n  // context - Context element (if missing, uses document)\n  //\n  // Returns a string\n  text(selector = 'html', context = this.document) {\n    assert(this.document, 'No window open');\n\n    if (this.document.documentElement)\n      return this.queryAll(selector, context)\n        .map(elem => elem.textContent)\n        .join('')\n        .trim()\n        .replace(/\\s+/g, ' ');\n    else\n      return (this.source ? this.source.toString : '');\n  }\n\n\n  // browser.html(selector?, context?) => String\n  //\n  // Returns the HTML contents of the selected elements.\n  //\n  // selector - CSS selector (if missing, entire document)\n  // context - Context element (if missing, uses document)\n  //\n  // Returns a string\n  html(selector = 'html', context = this.document) {\n    assert(this.document, 'No window open');\n\n    if (this.document.documentElement)\n      return this.queryAll(selector, context)\n        .map(elem => elem.outerHTML.trim())\n        .join('');\n    else\n      return (this.source ? this.source.toString : '');\n  }\n\n\n  // browser.xpath(expression, context?) => XPathResult\n  //\n  // Evaluates the XPath expression against the document (or context node) and return the XPath result.  Shortcut for\n  // `document.evaluate`.\n  xpath(expression, context = null) {\n    return this.document.evaluate(expression, context || this.document.documentElement, null, DOM.XPathResult.ANY_TYPE);\n  }\n\n  // browser.document => Document\n  //\n  // Returns the main window's document. Only valid after opening a document (see `browser.open`).\n  get document() {\n    return this.window && this.window.document;\n  }\n\n  // browser.body => Element\n  //\n  // Returns the body Element of the current document.\n  get body() {\n    return this.querySelector('body');\n  }\n\n  // Element that has the current focus.\n  get activeElement() {\n    return this.document && this.document.activeElement;\n  }\n\n  // Close all windows, clean state, etc.  This doesn't do anything the garbage\n  // collector doesn't already do, so you don't need to call this.\n  //\n  // But because it destroys the browser state, it's quite useful for detecting\n  // weird behavior bugs, e.g. an event loop that keeps running.  That's why\n  // the test suite uses this method.\n  destroy() {\n    if (this.tabs) {\n      this.tabs.closeAll();\n      this.tabs = null;\n    }\n  }\n\n\n  // Navigation\n  // ----------\n\n  // browser.visit(url, callback?)\n  //\n  // Loads document from the specified URL, processes events and calls the callback, or returns a promise.\n  visit(url, options, callback) {\n    if (arguments.length < 3 && typeof options === 'function')\n      [options, callback] = [{}, options];\n\n    const site = /^(https?:|file:)/i.test(this.site) ? this.site : `http://${this.site || 'localhost'}/`;\n    url = URL.resolve(site, url);\n\n    if (this.window)\n      this.tabs.close(this.window);\n    this.errors = [];\n    this.tabs.open({ url: url, referrer: this.referrer });\n    return this._wait(options, callback);\n  }\n\n\n  // browser.load(html, callback)\n  //\n  // Loads the HTML, processes events and calls the callback.\n  //\n  // Without a callback, returns a promise.\n  load(html, callback) {\n    if (this.window)\n      this.tabs.close(this.window);\n    this.errors = [];\n    this.tabs.open({ html: html });\n    return this._wait(null, callback);\n  }\n\n\n  // browser.location => Location\n  //\n  // Return the location of the current document (same as `window.location`).\n  get location() {\n    return this.window && this.window.location;\n  }\n\n  // browser.location = url\n  //\n  // Changes document location, loads new document if necessary (same as setting `window.location`).\n  set location(url) {\n    if (this.window)\n      this.window.location = url;\n    else\n      this.open({ url: url });\n  }\n\n  // browser.url => String\n  //\n  // Return the URL of the current document (same as `document.URL`).\n  get url() {\n    return this.window && this.window.location.href;\n  }\n\n  // browser.link(selector) : Element\n  //\n  // Finds and returns a link by its text content or selector.\n  link(selector) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n    // If the link has already been queried, return itself\n    if (selector instanceof DOM.Element)\n      return selector;\n\n    try {\n      const link = this.querySelector(selector);\n      if (link && link.tagName === 'A')\n        return link;\n    } catch (error) {\n      /* eslint no-empty:0 */\n    }\n    for (let elem of Array.from(this.querySelectorAll('body a')))\n      if (elem.textContent.trim() === selector)\n        return elem;\n\n    return null;\n  }\n\n  // browser.clickLink(selector, callback)\n  //\n  // Clicks on a link. Clicking on a link can trigger other events, load new page, etc: use a callback to be notified of\n  // completion.  Finds link by text content or selector.\n  //\n  // selector - CSS selector or link text\n  // callback - Called with two arguments: error and browser\n  clickLink(selector, callback) {\n    const link = this.link(selector);\n    assert(link, `No link matching '${selector}'`);\n    return this.click(link, callback);\n  }\n\n  // Return the history object.\n  get history() {\n    if (!this.window)\n      this.open();\n    return this.window.history;\n  }\n\n  // Navigate back in history.\n  back(callback) {\n    this.window.history.back();\n    return this._wait(null, callback);\n  }\n\n  // Reloads current page.\n  reload(callback) {\n    this.window.location.reload();\n    return this._wait(null, callback);\n  }\n\n\n  // browser.saveHistory() => String\n  //\n  // Save history to a text string.  You can use this to load the data later on using `browser.loadHistory`.\n  saveHistory() {\n    return this.window.history.save();\n  }\n\n  // browser.loadHistory(String)\n  //\n  // Load history from a text string (e.g. previously created using `browser.saveHistory`.\n  loadHistory(serialized) {\n    this.window.history.load(serialized);\n  }\n\n\n  // Forms\n  // -----\n\n  // browser.field(selector) : Element\n  //\n  // Find and return an input field (`INPUT`, `TEXTAREA` or `SELECT`) based on a CSS selector, field name (its `name`\n  // attribute) or the text value of a label associated with that field (case sensitive, but ignores leading/trailing\n  // spaces).\n  field(selector) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n    // If the field has already been queried, return itself\n    if (selector instanceof DOM.Element)\n      return selector;\n\n    try {\n      // Try more specific selector first.\n      const field = this.query(selector);\n      if (field && (field.tagName === 'INPUT' || field.tagName === 'TEXTAREA' || field.tagName === 'SELECT'))\n        return field;\n    } catch (error) {\n      // Invalid selector, but may be valid field name\n    }\n\n    // Use field name (case sensitive).\n    for (let elem of this.queryAll('input[name],textarea[name],select[name]'))\n      if (elem.getAttribute('name') === selector)\n        return elem;\n\n    // Try finding field from label.\n    for (let label of this.queryAll('label'))\n      if (label.textContent.trim() === selector) {\n        // nLabel can either reference field or enclose it\n        const forAttr = label.getAttribute('for');\n        return forAttr ?\n          this.document.getElementById(forAttr) :\n          label.querySelector('input,textarea,select');\n      }\n\n    return null;\n  }\n\n\n  // browser.focus(selector, callback) : null or lazy Promise\n  //\n  // Turns focus to the selected input field.  Shortcut for calling `field(selector).focus()`.\n  // callback - Called with error or nothing\n  //\n  // If called without callback, returns a promise\n  focus(selector, callback) {\n    const field = this.field(selector) || this.query(selector);\n    assert(field, `No form field matching '${selector}'`);\n    field.focus();\n    return this._wait(null, callback);\n  }\n\n\n  // browser.fill(selector, value, callback) => null or lazy Promise\n  //\n  // Fill in a field: input field or text area.\n  //\n  // selector - CSS selector, field name or text of the field label\n  // value - Field value\n  // callback - Called with error or nothing\n  //\n  // If called without callback, returns a promise\n  fill(selector, value, callback) {\n    const field = this.field(selector);\n    assert(field && (field.tagName === 'TEXTAREA' || (field.tagName === 'INPUT')), `No INPUT matching '${selector}'`);\n    assert(!field.disabled, 'This INPUT field is disabled');\n    assert(!field.readonly, 'This INPUT field is readonly');\n\n    // Switch focus to field, change value and emit the input event (HTML5)\n    field.focus();\n\n    // `field.value = value` does not work if there is a custom property descriptor, e.g. in React\n    // TODO: check what the actual spec compliant way of doing this is\n    const descriptor = Object.getOwnPropertyDescriptor(field.constructor.prototype, 'value');\n    descriptor.set.call(field, value);\n\n    this.fire(field, 'input', false);\n    // Switch focus out of field, if value changed, this will emit change event\n    field.blur();\n    return this._wait(null, callback);\n  }\n\n  _setCheckbox(selector, value, callback) {\n    const field = this.field(selector);\n    assert(field && field.tagName === 'INPUT' && field.type === 'checkbox', `No checkbox INPUT matching '${selector}'`);\n    assert(!field.disabled, 'This INPUT field is disabled');\n    assert(!field.readonly, 'This INPUT field is readonly');\n\n    if (field.checked ^ value)\n      field.click();\n    return this.wait(null, callback);\n  }\n\n  // browser.check(selector, callback) => null or lazy Promise\n  //\n  // Checks a checkbox.\n  //\n  // selector - CSS selector, field name or text of the field label\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  check(selector, callback) {\n    return this._setCheckbox(selector, true, callback);\n  }\n\n  // browser.uncheck(selector, callback) => null or lazy Promise\n  //\n  // Unchecks a checkbox.\n  //\n  // selector - CSS selector, field name or text of the field label\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  uncheck(selector, callback) {\n    return this._setCheckbox(selector, false, callback);\n  }\n\n  // browser.choose(selector, callback) => null or lazy Promise\n  //\n  // Selects a radio box option.\n  //\n  // selector - CSS selector, field value or text of the field label\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  choose(selector, callback) {\n    const field = this.field(selector) || this.field(`input[type=radio][value=\\'${escape(selector)}\\']`);\n    assert(field && field.tagName === 'INPUT' && field.type === 'radio', `No radio INPUT matching '${selector}'`);\n\n    field.click();\n    return this._wait(null, callback);\n  }\n\n  _findOption(selector, value) {\n    const field = this.field(selector);\n    assert(field && field.tagName === 'SELECT', `No SELECT matching '${selector}'`);\n    assert(!field.disabled, 'This SELECT field is disabled');\n    assert(!field.readonly, 'This SELECT field is readonly');\n\n    const options = Array.from(field.options);\n    for (let option of options)\n      if (option.value === value)\n        return option;\n\n    for (let option of options)\n      if (option.label === value)\n        return option;\n\n    for (let option of options)\n      if (option.textContent.trim() === value)\n        return option;\n\n    throw new Error(`No OPTION '${value}'`);\n  }\n\n  // browser.select(selector, value) => null or lazy Promise\n  //\n  // Selects an option.\n  //\n  // selector - CSS selector, field name or text of the field label\n  // value - Value (or label) or option to select\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  select(selector, value, callback) {\n    const option = this._findOption(selector, value);\n    return this.selectOption(option, callback);\n  }\n\n  // browser.selectOption(option) => null or lazy Promise\n  //\n  // Selects an option.\n  //\n  // option - option to select\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  selectOption(selector, callback) {\n    const option = this.query(selector);\n    if (option && !option.selected) {\n      const select = this.xpath('./ancestor::select', option).iterateNext();\n      select.focus();\n      option.selected = true;\n      this.fire(select, 'change', false);\n    }\n    return this._wait(null, callback);\n  }\n\n  // browser.unselect(selector, value, callback) => null or lazy Promise\n  //\n  // Unselects an option.\n  //\n  // selector - CSS selector, field name or text of the field label\n  // value - Value (or label) or option to unselect\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  unselect(selector, value, callback) {\n    const option = this._findOption(selector, value);\n    return this.unselectOption(option, callback);\n  }\n\n  // browser.unselectOption(option, callback) => null or lazy Promise\n  //\n  // Unselects an option.\n  //\n  // selector - selector or option to unselect\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  unselectOption(selector, callback) {\n    const option = this.query(selector);\n    if (option && option.selected) {\n      const select = this.xpath('./ancestor::select', option).iterateNext();\n      assert(select.multiple, 'Cannot unselect in single select');\n      option.selected = false;\n      select.focus();\n      this.fire(select, 'change', false);\n    }\n    return this._wait(null, callback);\n  }\n\n  // browser.attach(selector, filename, callback) => null or lazy Promise\n  //\n  // Attaches a file to the specified input field.  The second argument is the file name.\n  // callback - called with error or nothing.\n  //\n  // If called without callback, returns a promise\n  attach(selector, filename, callback) {\n    const field = this.field(selector);\n    assert(field && field.tagName === 'INPUT' && field.type === 'file', `No file INPUT matching '${selector}'`);\n\n    if (filename) {\n      const stat = File.statSync(filename);\n      const file = new (this.window.File)();\n      file.name = Path.basename(filename);\n      file.type = Mime.getType(filename);\n      file.size = stat.size;\n\n      Object.defineProperty(field, 'value', {value: filename});\n      const oldFiles = field.files;\n      if (typeof(oldFiles) !== 'array')\n        // JSDOM does not support an API to mock a list of files, and the default\n        // type of the 'files' attribute is a FileList object.\n        Object.defineProperty(field, 'files', {\n          value: []\n        });\n\n      field.files.push(file);\n    }\n    field.focus();\n    this.fire(field, 'change', false);\n    return this._wait(null, callback);\n  }\n\n  // browser.button(selector) : Element\n  //\n  // Finds a button using CSS selector, button name or button text (`BUTTON` or `INPUT` element).\n  //\n  // selector - CSS selector, button name or text of BUTTON element\n  button(selector) {\n    assert(this.document && this.document.documentElement, 'No open window with an HTML document');\n    // If the button has already been queried, return itself\n    if (selector instanceof DOM.Element)\n      return selector;\n\n    try {\n      const button = this.querySelector(selector);\n      if (button && (button.tagName === 'BUTTON' || button.tagName === 'INPUT'))\n        return button;\n    } catch (error) {\n    }\n    for (let elem of Array.from(this.querySelectorAll('button')))\n      if (elem.textContent.trim() === selector)\n        return elem;\n\n    const inputs = Array.from(this.querySelectorAll('input[type=submit],input[type=button],input[type=reset],button'));\n    for (let input of inputs)\n      if (input.name === selector)\n        return input;\n\n    for (let input of inputs)\n      if (input.value === selector)\n        return input;\n\n    return null;\n  }\n\n  // browser.pressButton(selector, callback)\n  //\n  // Press a button (button element or input of type `submit`).  Typically this will submit the form.  Use the callback\n  // to wait for the from submission, page to load and all events run their course.\n  //\n  // selector - CSS selector, button name or text of BUTTON element\n  // callback - Called with two arguments: null and browser\n  pressButton(selector, callback) {\n    const button = this.button(selector);\n    assert(button, `No BUTTON '${selector}'`);\n    assert(!button.disabled, 'This button is disabled');\n    button.focus();\n    const impl = idlUtils.implForWrapper(button);\n    return this.fire(button, 'click', callback);\n  }\n\n\n  // -- Cookies --\n\n\n  // Returns cookie that best matches the identifier.\n  //\n  // identifier - Identifies which cookie to return\n  // allProperties - If true, return all cookie properties, other just the value\n  //\n  // Identifier is either the cookie name, in which case the cookie domain is\n  // determined from the currently open Web page, and the cookie path is \"/\".\n  //\n  // Or the identifier can be an object specifying:\n  // name   - The cookie name\n  // domain - The cookie domain (defaults to hostname of currently open page)\n  // path   - The cookie path (defaults to \"/\")\n  //\n  // Returns cookie value, or cookie object (see setCookie).\n  getCookie(identifier, allProperties) {\n    identifier = this._cookieIdentifier(identifier);\n    assert(identifier.name, 'Missing cookie name');\n    assert(identifier.domain, 'No domain specified and no open page');\n\n    const cookie = this.cookies.select(identifier)[0];\n    return cookie ?\n      (allProperties ?\n        this._cookieProperties(cookie) :\n        cookie.value) :\n      null;\n  }\n\n  // Deletes cookie that best matches the identifier.\n  //\n  // identifier - Identifies which cookie to return\n  //\n  // Identifier is either the cookie name, in which case the cookie domain is\n  // determined from the currently open Web page, and the cookie path is \"/\".\n  //\n  // Or the identifier can be an object specifying:\n  // name   - The cookie name\n  // domain - The cookie domain (defaults to hostname of currently open page)\n  // path   - The cookie path (defaults to \"/\")\n  //\n  // Returns true if cookie delete.\n  deleteCookie(identifier) {\n    identifier = this._cookieIdentifier(identifier);\n    assert(identifier.name, 'Missing cookie name');\n    assert(identifier.domain, 'No domain specified and no open page');\n\n    const cookie = this.cookies.select(identifier)[0];\n    if (cookie)\n      this.cookies.delete(cookie);\n    return !!cookie;\n  }\n\n  // Sets a cookie.\n  //\n  // You can call this function with two arguments to set a session cookie: the\n  // cookie value and cookie name.  The domain is determined from the current\n  // page URL, and the path is always \"/\".\n  //\n  // Or you can call it with a single argument, with all cookie options:\n  // name     - Name of the cookie\n  // value    - Value of the cookie\n  // domain   - The cookie domain (e.g example.com, .example.com)\n  // path     - The cookie path\n  // expires  - Time when cookie expires\n  // maxAge   - How long before cookie expires\n  // secure   - True for HTTPS only cookie\n  // httpOnly - True if cookie not accessible from JS\n  setCookie(nameOrOptions, value) {\n    const domain = this.location && this.location.hostname;\n    if (typeof nameOrOptions === 'string')\n      this.cookies.set({\n        name:     nameOrOptions,\n        value:    value || '',\n        domain:   domain,\n        path:     '/',\n        secure:   false,\n        httpOnly: false\n      });\n    else {\n      assert(nameOrOptions.name, 'Missing cookie name');\n      this.cookies.set({\n        name:       nameOrOptions.name,\n        value:      nameOrOptions.value || value || '',\n        domain:     nameOrOptions.domain || domain,\n        path:       nameOrOptions.path || '/',\n        secure:     !!nameOrOptions.secure,\n        httpOnly:   !!nameOrOptions.httpOnly,\n        expires:    nameOrOptions.expires,\n        'max-age':  nameOrOptions['max-age']\n      });\n    }\n  }\n\n  // Deletes all cookies.\n  deleteCookies() {\n    this.cookies.deleteAll();\n  }\n\n  // Save cookies to a text string.  You can use this to load them back\n  // later on using `Browser.loadCookies`.\n  saveCookies() {\n    const serialized = [`# Saved on ${new Date().toISOString()}`];\n    for (let cookie of this.cookies.sort(Tough.cookieCompare))\n      serialized.push(cookie.toString());\n    return serialized.join('\\n') + '\\n';\n  }\n\n  // Load cookies from a text string (e.g. previously created using\n  // `Browser.saveCookies`.\n  loadCookies(serialized) {\n    for (let line of serialized.split(/\\n+/)) {\n      line = line.trim();\n      if (line && line[0] !== '#')\n        this.cookies.push(Cookie.parse(line));\n    }\n  }\n\n  // Converts Tough Cookie object into Zombie cookie representation.\n  _cookieProperties(cookie) {\n    const properties = {\n      name:   cookie.key,\n      value:  cookie.value,\n      domain: cookie.domain,\n      path:   cookie.path\n    };\n    if (cookie.secure)\n      properties.secure = true;\n    if (cookie.httpOnly)\n      properties.httpOnly = true;\n    if (cookie.expires && cookie.expires < Infinity)\n      properties.expires = cookie.expires;\n    return properties;\n  }\n\n  // Converts cookie name/identifier into an identifier object.\n  _cookieIdentifier(identifier) {\n    const location = this.location;\n    const domain = location && location.hostname;\n    const path   = location && location.pathname || '/';\n    return {\n      name:   identifier.name || identifier,\n      domain: identifier.domain || domain,\n      path:   identifier.path || path\n    };\n  }\n\n\n  // -- Local/Session Storage --\n\n\n  // Returns local Storage based on the document origin (hostname/port). This is the same storage area you can access\n  // from any document of that origin.\n  localStorage(host) {\n    return this._storages.local(host);\n  }\n\n  // Returns session Storage based on the document origin (hostname/port). This is the same storage area you can access\n  // from any document of that origin.\n  sessionStorage(host) {\n    return this._storages.session(host);\n  }\n\n  // Save local/session storage to a text string.  You can use this to load the data later on using\n  // `browser.loadStorage`.\n  saveStorage() {\n    return this._storages.save();\n  }\n\n  // Load local/session storage from a text string (e.g. previously created using `browser.saveStorage`.\n  loadStorage(serialized) {\n    this._storages.load(serialized);\n  }\n\n\n  // Scripts\n  // -------\n\n  // Evaluates a JavaScript expression in the context of the current window and returns the result.  When evaluating\n  // external script, also include filename.\n  //\n  // You can also use this to evaluate a function in the context of the window: for timers and asynchronous callbacks\n  // (e.g. XHR).\n  evaluate(code, filename) {\n    if (!this.window)\n      this.open();\n    return this.window._evaluate(code, filename);\n  }\n\n\n  // Resources\n  // ---------\n\n  fetch(input, init) {\n    return this.pipeline._fetch(input, init);\n  }\n\n  // Returns all resources loaded by currently open window.\n  get resources() {\n    return this.window && this.window.resources;\n  }\n\n  // Get Request associated with currently open window\n  get request() {\n    return this.window && this.window._request || null;\n  }\n\n  // Get Response associated with currently open window\n  get response() {\n    return this.window && this.window._response || null;\n  }\n\n  // Get the status code of the response associated with this window\n  get status() {\n    const { response } = this;\n    return response ? response.status : 0;\n  }\n\n  get statusCode() {\n    return this.status;\n  }\n\n  // Return true if last response had status code 200 .. 299\n  get success() {\n    const { status } = this;\n    return status >= 200 && status < 300;\n  }\n\n  // Returns true if the last response followed a redirect\n  get redirected() {\n    const { request } = this;\n    return request ? (request._redirectCount > 0) : false;\n  }\n\n  // Get the source HTML for the last response\n  get source() {\n    const { response } = this;\n    return response ? response.body : null;\n  }\n\n\n  // Debugging\n  // ---------\n\n  // Enable debugging.  You can do this in code instead of setting DEBUG environment variable.\n  debug() {\n    this._debug = Browser._enableDebugging();\n  }\n\n\n\n  // Zombie can spit out messages to help you figure out what's going on as your code executes.\n  //\n  // To spit a message to the console when running in debug mode, call this method with one or more values (same as\n  // `console.log`).  You can also call it with a function that will be evaluated only when running in debug mode.\n  //\n  // For example:\n  //     browser.log('Opening page:', url);\n  //     browser.log(function() { return 'Opening page: ' + url });\n  log(...args) {\n    if (typeof args[0] === 'function')\n      args = [args[0]()];\n    this.emit('log', format(...args));\n  }\n\n  // Dump information to the console: Zombie version, current URL, history, cookies, event loop, etc.  Useful for\n  // debugging and submitting error reports.\n  dump(output = process.stdout) {\n    function indent(lines) {\n      return lines.map(line => `  ${line}\\n`).join('');\n    }\n    output.write(`Zombie: ${Browser.VERSION}\\n`);\n    output.write(`URL:    ${this.window.location.href}\\n`);\n    output.write('\\nHistory:\\n');\n    this.history.dump(output);\n    output.write('\\nCookies:\\n');\n    this.cookies.dump(output);\n    output.write('\\nStorage:\\n');\n\n    if (this.document) {\n      const html  = this.html();\n      const slice = (html.length > 497) ? `${html.slice(0, 497)}...` : html;\n      output.write(`Document:\\n${indent(slice.split('\\n'))}\\n`);\n    } else\n      output.write('No document\\n');\n\n    output.write('\\n');\n    this._eventLoop.dump(output);\n  }\n\n\n  // -- Static methods ---\n\n  // ### zombie.visit(url, callback)\n  // ### zombie.visit(url, options? callback)\n  //\n  // Creates a new Browser, opens window to the URL and calls the callback when\n  // done processing all events.\n  //\n  // * url -- URL of page to open\n  // * callback -- Called with error, browser\n  static visit(url, options, callback) {\n    if (arguments.length === 2 && typeof options === 'function')\n      [options, callback] = [null, options];\n    const browser = new Browser(options);\n    if (callback)\n      browser.visit(url, (error)=> callback(error, browser));\n    else\n      return browser.visit(url).then(()=> browser);\n  }\n\n  // Allows you to make requests against a named domain and HTTP/S port, and\n  // will route it to the test server running on localhost and unprivileged\n  // port.\n  static localhost(source, target) {\n    reroute(source, target);\n    if (!this.site) {\n      const [ hostname ] = source.split(':');\n      this.site = hostname.replace(/^\\*\\./, '');\n    }\n  }\n\n  // Register a browser extension.\n  //\n  // Browser extensions are called for each newly created browser object, and\n  // can be used to change browser options, register listeners, add methods,\n  // etc.\n  static extend(extension) {\n    this._extensions.push(extension);\n  }\n\n  // Call this to return a debug() instance with debugging enabled.\n  static _enableDebugging() {\n    // With debugging enabled, every time we call debug('zombie') we get a new\n    // instance which outputs with a different color.  This can be confusing, so\n    // if debugging is already enabled (DEBUG=zombie) we want to use the current\n    // instance.  Otherwise, we want to create a new instance (_debugEnabled)\n    // and reuse it every time someone calls browser.debug().\n    if (this._debug.enabled)\n      return this._debug.enabled;\n\n    if (!this._debugEnabled) {\n      debug.enable('zombie');\n      this._debugEnabled = debug('zombie');\n    }\n    return this._debugEnabled;\n  }\n\n}\n\n\n// -- Static properties --\n\nBrowser.VERSION  = VERSION;\n\nBrowser.Assert   = Assert;\nBrowser.Pipeline = Pipeline;\nBrowser.Headers  = Fetch.Headers;\nBrowser.Request  = Fetch.Request;\nBrowser.Response = Fetch.Response;\n\n\n// -- These defaults are used in any new browser instance --\n\n// Which features are enabled.\nBrowser.features = DEFAULT_FEATURES;\n\n// Proxy URL.\n//\n// Example\n//   Browser.proxy = 'http://myproxy:8080'\nBrowser.proxy = null;\n\n// If true, suppress `console.log` output from scripts (ignored when DEBUG=zombie)\nBrowser.silent = false;\n\n// You can use visit with a path, and it will make a request relative to this host/URL.\nBrowser.site = null;\n\n// Check SSL certificates against CA.  False by default since you're likely\n// testing with a self-signed certificate.\nBrowser.strictSSL = false;\n\n// Sets the outgoing IP address in case there is more than on available.\n// Defaults to 0.0.0.0 which should select default interface\nBrowser.localAddress = '0.0.0.0';\n\n// User agent string sent to server.\nBrowser.userAgent = `Mozilla/5.0 Chrome/10.0.613.0 Safari/534.15 Zombie.js/${VERSION}`;\n\n// Navigator language code\nBrowser.language = 'en-US';\n\n// Default time to wait (visit, wait, etc).\nBrowser.waitDuration = '5s';\n\n// Indicates whether or not to validate and execute JavaScript, default true.\nBrowser.runScripts = true;\n\n\n// -- Internal properties --\n\n// Debug instance.  Create new instance when enabling debugging with Zombie.debug\nBrowser._debug = debug('zombie');\n\n// Set after calling _enableDebugging\nBrowser._debugEnabled = null;\n\n// Browser extensions;\nBrowser._extensions = [];\n\n\nmodule.exports = Browser;\n"]}