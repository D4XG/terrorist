{"version":3,"sources":["xhr.js"],"names":["DOM","require","Fetch","ms","URL","Utils","EventTarget","DOMException","idlUtils","XMLHttpRequest","constructor","window","setup","method","interface","prototype","_window","_browser","browser","_pending","readyState","UNSENT","onreadystatechange","timeout","_ownerDocument","document","_defaultView","wrapperSymbol","implForWrapper","abort","request","sent","OPENED","DONE","aborted","_response","_error","open","url","useAsync","user","password","NOT_SUPPORTED_ERR","_method","toUpperCase","test","SECURITY_ERR","SYNTAX_ERR","headers","Headers","parse","resolve","location","href","protocol","port","hostname","host","set","_cors","get","hash","auth","_url","format","_headers","_stateChanged","setRequestHeader","header","value","INVALID_STATE_ERR","send","data","Request","body","_fire","setTimeout","timedOut","TIMEOUT_ERR","errors","push","_eventQueue","http","error","response","clearTimeout","ABORT_ERR","NETWORK_ERR","allowedOrigin","allowedMethods","indexOf","raise","message","exception","HEADERS_RECEIVED","LOADING","done","waitForCompletion","text","then","responseText","status","statusText","responseXML","getResponseHeader","name","getAllResponseHeaders","toString","newState","eventName","event","Event","initEvent","_dispatchEvent","emit","type","listener","implSymbol","_eventListeners","callback","options","dispatchEvent","module","exports"],"mappings":"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","file":"xhr.js","sourcesContent":["// Implements XMLHttpRequest.\n// See http://www.w3.org/TR/XMLHttpRequest/#the-abort()-method\n\n\nconst DOM     = require('./dom');\nconst Fetch   = require('./fetch');\nconst ms      = require('ms');\nconst URL     = require('url');\nconst Utils   = require('jsdom/lib/jsdom/utils');\nconst EventTarget = require('jsdom/lib/jsdom/living/generated/EventTarget');\n\nconst { DOMException } = DOM;\nconst { idlUtils }   = require('./dom/impl');\n\n\nclass XMLHttpRequest {\n//class XMLHttpRequest extends EventTarget {\n\n  constructor(window) {\n    //super();\n    EventTarget.setup(this);\n    for (let method in EventTarget.interface.prototype)\n      this[method] = EventTarget.interface.prototype[method];\n\n    this._window      = window;\n    this._browser     = window.browser;\n    // Pending request\n    this._pending     = null;\n    // Response headers\n    this.readyState   = XMLHttpRequest.UNSENT;\n\n    this.onreadystatechange = null;\n    this.timeout      = 0;\n\n    // XHR events need the first to dispatch, the second to propagate up to window\n    this._ownerDocument = window.document;\n    this._ownerDocument._defaultView = window;\n    window[idlUtils.wrapperSymbol] = window;\n    idlUtils.implForWrapper(this)._ownerDocument = this._ownerDocument;\n  }\n\n\n  // Aborts the request if it has already been sent.\n  abort() {\n    const request = this._pending;\n    const sent    = !!request;\n    if (this.readyState === XMLHttpRequest.UNSENT || (this.readyState === XMLHttpRequest.OPENED && !sent)) {\n      this.readyState = XMLHttpRequest.UNSENT;\n      return;\n    }\n    // Aborting a done request sets its readyState to UNSENT and does not trigger a readystatechange event\n    // https://xhr.spec.whatwg.org/#the-abort()-method\n    if (this.readyState === XMLHttpRequest.DONE)\n      this.readyState = XMLHttpRequest.UNSENT;\n    else\n      // Tell any pending request it has been aborted.\n      request.aborted = true;\n\n    this._response  = null;\n    this._error     = null;\n    this._pending   = null;\n  }\n\n\n  // Initializes a request.\n  //\n  // Calling this method an already active request (one for which open()or\n  // openRequest()has already been called) is the equivalent of calling abort().\n  open(method, url, useAsync, user, password) { // jshint ignore:line\n    if (useAsync === false)\n      throw new DOMException(DOMException.NOT_SUPPORTED_ERR, 'Zombie does not support synchronous XHR requests');\n\n    // Abort any pending request.\n    this.abort();\n\n    // Check supported HTTP method\n    this._method = method.toUpperCase();\n    if (/^(CONNECT|TRACE|TRACK)$/.test(this._method))\n      throw new DOMException(DOMException.SECURITY_ERR, 'Unsupported HTTP method');\n    if (!/^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/.test(this._method))\n      throw new DOMException(DOMException.SYNTAX_ERR, 'Unsupported HTTP method');\n\n    const headers = new Fetch.Headers();\n\n    // Normalize the URL and check security\n    url = URL.parse(URL.resolve(this._window.location.href, url));\n    // Don't consider port if they are standard for http and https\n    if ((url.protocol === 'https:' && url.port === '443') ||\n        (url.protocol === 'http:'  && url.port === '80'))\n      delete url.port;\n\n    if (!/^https?:$/i.test(url.protocol))\n      throw new DOMException(DOMException.NOT_SUPPORTED_ERR, 'Only HTTP/S protocol supported');\n    url.hostname = url.hostname || this._window.location.hostname;\n    url.host = url.port ? `${url.hostname}:${url.port}` : url.hostname;\n    if (url.host !== this._window.location.host) {\n      headers.set('Origin', `${this._window.location.protocol}//${this._window.location.host}`);\n      this._cors = headers.get('Origin');\n    }\n    url.hash = null;\n    if (user)\n      url.auth = `${user}:${password}`;\n    // Used for logging requests\n    this._url       = URL.format(url);\n    this._headers   = headers;\n\n    // Reset response status\n    this._stateChanged(XMLHttpRequest.OPENED);\n  }\n\n\n  // Sets the value of an HTTP request header.You must call setRequestHeader()\n  // after open(), but before send().\n  setRequestHeader(header, value) {\n    if (this.readyState !== XMLHttpRequest.OPENED)\n      throw new DOMException(DOMException.INVALID_STATE_ERR,  'Invalid state');\n    this._headers.set(header, value);\n  }\n\n\n  // Sends the request. If the request is asynchronous (which is the default),\n  // this method returns as soon as the request is sent. If the request is\n  // synchronous, this method doesn't return until the response has arrived.\n  send(data) {\n    // Request must be opened.\n    if (this.readyState !== XMLHttpRequest.OPENED)\n      throw new DOMException(DOMException.INVALID_STATE_ERR,  'Invalid state');\n\n    const request = new Fetch.Request(this._url, {\n      method:   this._method,\n      headers:  this._headers,\n      body:     data\n    });\n    this._pending = request;\n    this._fire('loadstart');\n\n    const timeout = setTimeout(()=> {\n      if (this._pending === request)\n        this._pending = null;\n      request.timedOut = true;\n\n      this._stateChanged(XMLHttpRequest.DONE);\n      this._fire('progress');\n      this._error = new DOMException(DOMException.TIMEOUT_ERR, 'The request timed out');\n      this._fire('timeout', this._error);\n      this._fire('loadend');\n      this._browser.errors.push(this._error);\n    }, this.timeout || ms('2m'));\n\n    this._window._eventQueue.http(request, (error, response)=> {\n      // Request already timed-out, nothing to do\n      if (request.timedOut)\n        return;\n      clearTimeout(timeout);\n\n      if (this._pending === request)\n        this._pending = null;\n\n      // Request aborted\n      if (request.aborted) {\n        this._stateChanged(XMLHttpRequest.DONE);\n        this._fire('progress');\n        this._error = new DOMException(DOMException.ABORT_ERR, 'Request aborted');\n        this._fire('abort', this._error);\n        return;\n      }\n\n      // If not aborted, then we look at networking error\n      if (error) {\n        this._stateChanged(XMLHttpRequest.DONE);\n        this._fire('progress');\n        this._error = new DOMException(DOMException.NETWORK_ERR);\n        this._fire('error', this._error);\n        this._fire('loadend');\n        this._browser.errors.push(this._error);\n        return;\n      }\n\n      // CORS request, check origin, may lead to new error\n      if (this._cors) {\n        const allowedOrigin = response.headers.get('Access-Control-Allow-Origin');\n        if (!(allowedOrigin === '*' || allowedOrigin === this._cors)) \n          this._error = new DOMException(DOMException.SECURITY_ERR, 'Cannot make request to different domain')          \n        else if (!/^(GET|HEAD|POST)$/.test(this._method)) {\n          const allowedMethods = response.headers.get('Access-Control-Allow-Methods');        \n          if (!allowedMethods || allowedMethods.indexOf(request.method) == -1) \n            this._error = new DOMException(DOMException.SECURITY_ERR, 'Cannot make request with not-allowed method('+this._method+')');            \n        }   \n        if (this._error) {\n          this._browser.errors.push(this._error);\n          this._stateChanged(XMLHttpRequest.DONE);\n          this._fire('progress');\n          this._fire('error', this._error);\n          this._fire('loadend');\n          this.raise('error', this._error.message, { exception: this._error });\n          return;\n        }     \n      }\n\n      // Store the response so getters have acess access it\n      this._response        = response;\n      // We have a one-stop implementation that goes through all the state\n      // transitions\n      this._stateChanged(XMLHttpRequest.HEADERS_RECEIVED);\n      this._stateChanged(XMLHttpRequest.LOADING);\n\n      const done = this._window._eventQueue.waitForCompletion();\n      response.text().then(text => {\n        this.responseText = text;\n        this._stateChanged(XMLHttpRequest.DONE);\n\n        this._fire('progress');\n        this._fire('load');\n        this._fire('loadend');\n        done();\n      });\n\n\n    });\n    request.sent = true;\n  }\n\n\n  get status() {\n    // Status code/headers available immediately, 0 if request errored\n    return this._response ? this._response.status :\n           this._error    ? 0 : null;\n  }\n\n  get statusText() {\n    // Status code/headers available immediately, '' if request errored\n    return this._response ? this._response.statusText :\n           this._error    ? '' : null;\n  }\n\n  get responseXML() {\n    // Not implemented yet\n    return null;\n  }\n\n  getResponseHeader(name) {\n    // Returns the string containing the text of the specified header, or null if\n    // either the response has not yet been received or the header doesn't exist in\n    // the response.\n    return this._response && this._response.headers.get(name) || null;\n  }\n\n  getAllResponseHeaders() {\n    // Returns all the response headers as a string, or null if no response has\n    // been received. Note: For multipart requests, this returns the headers from\n    // the current part of the request, not from the original channel.\n    if (this._response)\n      // XHR's getAllResponseHeaders, against all reason, returns a multi-line\n      // string.  See http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\n      return this._response.headers.toString();\n    else\n      return null;\n  }\n\n\n  // Fire onreadystatechange event\n  _stateChanged(newState) {\n    this.readyState = newState;\n    this._fire('readystatechange');\n  }\n\n  // Fire the named event on this object\n  _fire(eventName, error) {\n    const event = new DOM.Event('xhr');\n    event.initEvent(eventName, true, true);\n    event.error = error;\n    this._dispatchEvent(event);\n    this._browser.emit('xhr', eventName, this._url);\n  }\n\n  // Raise error coming from jsdom\n  raise(type, message, data) {\n    this._ownerDocument.raise(type, message, data);\n  }\n\n  _dispatchEvent(event) {\n    const listener = this[`on${event.type}`];\n    if (listener)\n      this[idlUtils.implSymbol]._eventListeners[event.type] = [{\n        callback: listener,\n        options: {}\n      }];\n    this.dispatchEvent(event);\n  }\n\n}\n\n\n// Lifecycle states\nXMLHttpRequest.UNSENT           = 0;\nXMLHttpRequest.OPENED           = 1;\nXMLHttpRequest.HEADERS_RECEIVED = 2;\nXMLHttpRequest.LOADING          = 3;\nXMLHttpRequest.DONE             = 4;\n\nmodule.exports = XMLHttpRequest;\n"]}