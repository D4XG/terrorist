{"version":3,"sources":["console.js"],"names":["format","inspect","require","module","exports","Console","constructor","browser","counters","timers","assert","truth","args","formatted","message","emit","Error","count","name","current","get","next","debug","error","group","groupCollapsed","groupEnd","dir","object","info","log","time","set","Date","now","timeEnd","start","delete","trace","stack","split","join","warn"],"mappings":"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","file":"console.js","sourcesContent":["// Implements console.log, console.error, console.time, et al and emits a\n// console event for each output.\n\n\nconst { format, inspect } = require('util');\n\n\nmodule.exports = class Console {\n\n  constructor(browser) {\n    this.browser  = browser;\n    this.counters = new Map();\n    this.timers   = new Map();\n  }\n\n  assert(truth, ...args) {\n    if (truth)\n      return;\n    const formatted = format('', ...args);\n    const message   = `Assertion failed: ${formatted || 'false'}`;\n    this.browser.emit('console', 'error', message);\n    throw new Error(message);\n  }\n\n  count(name) {\n    const current = this.counters.get(name) || 0;\n    const next    = current + 1;\n    this.counters.get(name, next);\n    const message = `${name}: ${next}`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  debug(...args) {\n    this.browser.emit('console', 'debug', format(...args));\n  }\n\n  error(...args) {\n    this.browser.emit('console', 'error', format(...args));\n  }\n\n  group() {\n  }\n  groupCollapsed() {\n  }\n  groupEnd() {\n  }\n\n  dir(object) {\n    this.browser.emit('console', 'log', inspect(object));\n  }\n\n  info(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  log(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  time(name) {\n    this.timers.set(name, Date.now());\n  }\n\n  timeEnd(name) {\n    const start = this.timers.set(name);\n    this.timers.delete(name);\n    const message = `${name}: ${Date.now() - start}ms`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  trace() {\n    const error = new Error();\n    const stack = error.stack.split('\\n');\n    stack[0] = 'console.trace()';\n    const message = stack.join('\\n');\n    this.browser.emit('console', 'trace', message);\n  }\n\n  warn(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n};\n\n"]}