{"version":3,"sources":["history.js"],"names":["assert","require","loadDocument","resourceLoader","URL","idlUtils","whatwgURL","Location","constructor","history","url","_history","_url","current","assign","replace","reload","toString","hostname","parse","newUrl","port","host","format","href","origin","protocol","hash","value","pathname","search","hashChange","entry","aBase","aHash","split","bBase","bHash","parentFrom","window","parent","Entry","pushState","prev","next","destroy","keepAlive","_destroy","append","newEntry","History","browser","focus","first","open","args","document","defaultView","addEntry","location","undefined","replaceEntry","updateLocation","documentImpl","implForWrapper","_URL","parseURL","_location","submit","name","referrer","resolve","event","createEvent","initEvent","_eventQueue","enqueue","dispatchEvent","go","amount","was","oldHost","newHost","popstate","state","hashchange","length","title","replaceState","dump","output","process","stdout","i","write","module","exports","createHistory","visit","call","bind"],"mappings":"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","file":"history.js","sourcesContent":["// Window history.\n//\n// Each window belongs to a history. Think of history as a timeline, with\n// currently active window, and multiple previous and future windows. From that\n// window you can navigate backwards and forwards between all other windows that\n// belong to the same history.\n//\n// Each window also has a container: either a browser tab or an iframe. When\n// navigating in history, a different window (from the same history), replaces\n// the current window within its container.\n//\n// Containers have access to the currently active window, not the history\n// itself, so navigation has to alert the container when there's a change in the\n// currently active window.\n//\n// The history does so by calling a \"focus\" function. To create the first\n// window, the container must first create a new history and supply a focus\n// function. The result is another function it can use to create the new window.\n//\n// From there on, it can navigate in history and add new windows by changing the\n// current location (or using assign/replace).\n//\n// It can be used like this:\n//\n//   active = null\n//   focus = (window)->\n//     active = window\n//   history = createHistory(browser, focus)\n//   window = history(url: url, name: name)\n\n\nconst assert          = require('assert');\nconst loadDocument    = require('./document');\nconst resourceLoader  = require('jsdom/lib/jsdom/browser/resource-loader');\nconst URL             = require('url');\n\nconst { idlUtils }    = require('./dom/impl');\n\nconst whatwgURL       = require('whatwg-url');\n\n\nclass Location {\n\n  constructor(history, url) {\n    this._history = history;\n    this._url = url || (history.current ? history.current.url : 'about:blank');\n  }\n\n  assign(url) {\n    this._history.assign(url);\n  }\n\n  replace(url) {\n    this._history.replace(url);\n  }\n\n  reload() {\n    this._history.reload();\n  }\n\n  toString() {\n    return this._url;\n  }\n\n  get hostname() {\n    return URL.parse(this._url).hostname;\n  }\n\n  set hostname(hostname) {\n    const newUrl = URL.parse(this._url);\n    if (newUrl.port)\n      newUrl.host = `${hostname}:${newUrl.port}`;\n    else\n      newUrl.host = hostname;\n    this.assign(URL.format(newUrl));\n  }\n\n  get href() {\n    return this._url;\n  }\n\n  set href(href) {\n    this.assign(URL.format(href));\n  }\n\n  get origin() {\n    return `${this.protocol}//${this.host}`;\n  }\n\n  get hash() {\n    return URL.parse(this._url).hash || '';\n  }\n\n  set hash(value) {\n    const url  = Object.assign(URL.parse(this._url), { hash: value });\n    this.assign(URL.format(url));\n  }\n\n  get host() {\n    return URL.parse(this._url).host || '';\n  }\n\n  set host(value) {\n    const url  = Object.assign(URL.parse(this._url), { host: value });\n    this.assign(URL.format(url));\n  }\n\n  get pathname() {\n    return URL.parse(this._url).pathname || '';\n  }\n\n  set pathname(value) {\n    const url  = Object.assign(URL.parse(this._url), { pathname: value });\n    this.assign(URL.format(url));\n  }\n\n  get port() {\n    return URL.parse(this._url).port || '';\n  }\n\n  set port(value) {\n    const url  = Object.assign(URL.parse(this._url), { port: value });\n    this.assign(URL.format(url));\n  }\n\n  get protocol() {\n    return URL.parse(this._url).protocol || '';\n  }\n\n  set protocol(value) {\n    const url  = Object.assign(URL.parse(this._url), { protocol: value });\n    this.assign(URL.format(url));\n  }\n\n  get search() {\n    return URL.parse(this._url).search || '';\n  }\n\n  set search(value) {\n    const url  = Object.assign(URL.parse(this._url), { search: value });\n    this.assign(URL.format(url));\n  }\n}\n\n\n// Returns true if the hash portion of the URL changed between the history entry\n// (entry) and the new URL we want to inspect (url).\nfunction hashChange(entry, url) {\n  if (!entry)\n    return false;\n  const [aBase, aHash] = url.split('#');\n  const [bBase, bHash] = entry.url.split('#');\n  return (aBase === bBase) && (aHash !== bHash);\n}\n\n// If window is not the top level window, return parent for creating new child\n// window, otherwise returns false.\nfunction parentFrom(window) {\n  if (window.parent !== window)\n    return window.parent;\n}\n\n\n// Entry has the following properties:\n// window      - Window for this history entry (may be shared with other entries)\n// url         - URL for this history entry\n// pushState   - Push state state\n// next        - Next entry in history\n// prev        - Previous entry in history\nclass Entry {\n\n  constructor(window, url, pushState) {\n    this.window     = window;\n    this.url        = URL.format(url);\n    this.pushState  = pushState;\n    this.prev       = null;\n    this.next       = null;\n  }\n\n  // Called to destroy this entry. Used when we destroy the entire history,\n  // closing all windows. But also used when we replace one entry with another,\n  // and there are two cases to worry about:\n  // - The current entry uses the same window as the previous entry, we get rid\n  //   of the entry, but must keep the entry intact\n  // - The current entry uses the same window as the new entry, also need to\n  //   keep window intact\n  //\n  // keepAlive - Call destroy on every document except this one, since it's\n  //             being replaced.\n  destroy(keepAlive) {\n    if (this.next) {\n      this.next.destroy(keepAlive || this.window);\n      this.next = null;\n    }\n    // Do not close window if replacing entry with same window\n    if (keepAlive === this.window)\n      return;\n    // Do not close window if used by previous entry in history\n    if (this.prev && this.prev.window === this.window)\n      return;\n    this.window._destroy();\n  }\n\n  append(newEntry, keepAlive) {\n    if (this.next)\n      this.next.destroy(keepAlive);\n    newEntry.prev = this;\n    this.next = newEntry;\n  }\n\n}\n\n\nclass History {\n\n  constructor(browser, focus) {\n    this.browser  = browser;\n    this.focus    = focus;\n    this.first    = null;\n    this.current  = null;\n  }\n\n  // Opens the first window and returns it.\n  open(args) {\n    args.browser = this.browser;\n    args.history = this;\n    const document  = loadDocument(args);\n    const window    = document.defaultView;\n    this.addEntry(window, args.url);\n    return window;\n  }\n\n  // Dispose of all windows in history\n  destroy() {\n    this.focus(null);\n    // Re-entrant\n    const first   = this.first;\n    this.first    = null;\n    this.current  = null;\n    if (first)\n      first.destroy();\n  }\n\n  // Add a new entry.  When a window opens it call this to add itself to history.\n  addEntry(window, url = window.location.href, pushState = undefined) {\n    const entry = new Entry(window, url, pushState);\n    if (this.current) {\n      this.current.append(entry);\n      this.current  = entry;\n    } else {\n      this.first    = entry;\n      this.current  = entry;\n    }\n    this.focus(window);\n  }\n\n  // Replace current entry with a new one.\n  replaceEntry(window, url = window.location.href, pushState = undefined) {\n    const entry = new Entry(window, url, pushState);\n    if (this.current === this.first) {\n      if (this.current)\n        this.current.destroy(window);\n      this.first    = entry;\n      this.current  = entry;\n    } else {\n      this.current.prev.append(entry, window);\n      this.current  = entry;\n    }\n    this.focus(window);\n  }\n\n  // Call with two argument to update window.location and current.url to new URL\n  updateLocation(window, url) {\n    const documentImpl = idlUtils.implForWrapper(window.document)\n    if (window === this.current)\n      this.current.url = url;\n    documentImpl._URL = whatwgURL.parseURL(url || 'about:blank');\n    documentImpl._location = new Location(this, url);\n  }\n\n  // Returns window.location\n  get location() {\n    return new Location(this);\n  }\n\n\n  // Form submission\n  submit(args) {\n    args.browser   = this.browser;\n    args.history   = this;\n    const { window }  = this.current;\n    if (window) {\n      args.name      = window.name;\n      args.parent    = parentFrom(window);\n      args.referrer  = window.location.href;\n    }\n    const document  = loadDocument(args);\n    this.addEntry(document.defaultView, document.location.href);\n  }\n\n  // Returns current URL.\n  get url() {\n    return this.current && this.current.url;\n  }\n\n\n  // -- Implementation of window.history --\n\n  // This method is available from Location, used to navigate to a new page.\n  assign(url) {\n    let name    = '';\n    let parent  = null;\n\n    if (this.current) {\n      url     = URL.resolve(this.current.window.document.URL, url)\n      name    = this.current.window.name;\n      parent  = parentFrom(this.current.window);\n    }\n    if (this.current && this.current.url === url) {\n      this.replace(url);\n      return;\n    }\n\n    if (hashChange(this.current, url)) {\n      const { window } = this.current;\n      this.updateLocation(window, url);\n      this.addEntry(window, url); // Reuse window with new URL\n      const event = window.document.createEvent('HTMLEvents');\n      event.initEvent('hashchange', true, false);\n      window._eventQueue.enqueue(function() {\n        window.dispatchEvent(event);\n      });\n    } else {\n      const args = {\n        browser:  this.browser,\n        history:  this,\n        name:     name,\n        url:      url,\n        parent:   parent,\n        referrer: this.current && this.current.window.document.referrer\n      };\n      const document = loadDocument(args);\n      this.addEntry(document.defaultView, url);\n    }\n  }\n\n  // This method is available from Location, used to navigate to a new page.\n  replace(url) {\n    url = URL.format(url);\n    let name = '';\n\n    if (this.current) {\n      url = URL.resolve(this.current.window.document.URL, url)\n      name = this.current.window.name;\n    }\n\n    if (hashChange(this.current, url)) {\n      const { window } = this.current;\n      this.replaceEntry(window, url); // Reuse window with new URL\n      const event = window.document.createEvent('HTMLEvents');\n      event.initEvent('hashchange', true, false);\n      window._eventQueue.enqueue(function() {\n        window.dispatchEvent(event);\n      });\n    } else {\n      const args = {\n        browser:  this.browser,\n        history:  this,\n        name:     name,\n        url:      url,\n        parent:   parentFrom(this.current.window)\n      };\n      const document = loadDocument(args);\n      this.replaceEntry(document.defaultView, url);\n    }\n  }\n\n  reload() {\n    const { window } = this.current;\n    if (window) {\n      const url   = window.location.href;\n      const args  = {\n        browser:  this.browser,\n        history:  this,\n        name:     window.name,\n        url:      url,\n        parent:   parentFrom(window),\n        referrer: window.document.referrer\n      };\n      const document = loadDocument(args);\n      this.replaceEntry(document.defaultView, url);\n    }\n  }\n\n  // This method is available from Location.\n  go(amount) {\n    const was = this.current;\n    while (amount > 0) {\n      if (this.current.next)\n        this.current = this.current.next;\n      --amount;\n    }\n    while (amount < 0) {\n      if (this.current.prev)\n        this.current = this.current.prev;\n      ++amount;\n    }\n\n    // If moving from one page to another\n    if (this.current && was && this.current !== was) {\n      const { window } = this.current;\n      this.updateLocation(window, this.current.url);\n      this.focus(window);\n\n      if (this.current.pushState || was.pushState) {\n        // Created with pushState/replaceState, send popstate event if navigating\n        // within same host.\n        const oldHost = URL.parse(was.url).host;\n        const newHost = URL.parse(this.current.url).host;\n        if (oldHost === newHost) {\n          const popstate = window.document.createEvent('HTMLEvents');\n          popstate.initEvent('popstate', false, false);\n          popstate.state = this.current.pushState;\n          window._eventQueue.enqueue(function() {\n            window.dispatchEvent(popstate);\n          });\n        }\n      } else if (hashChange(was, this.current.url)) {\n        const hashchange = window.document.createEvent('HTMLEvents');\n        hashchange.initEvent('hashchange', true, false);\n        window._eventQueue.enqueue(function() {\n          window.dispatchEvent(hashchange);\n        });\n      }\n    }\n  }\n\n\n  // This method is available from Location.\n  get length() {\n    let entry = this.first;\n    let length = 0;\n    while (entry) {\n      ++length;\n      entry = entry.next;\n    }\n    return length;\n  }\n\n\n  // This method is available from Location.\n  pushState(state, title, url = this.url) {\n    url = URL.resolve(this.current.window.document.URL, url)\n    // TODO: check same origin\n    this.addEntry(this.current.window, url, state || {});\n    this.updateLocation(this.current.window, url);\n  }\n\n  // This method is available from Location.\n  replaceState(state, title, url = this.url) {\n    url = URL.resolve(this.current.window.document.URL, url)\n    // TODO: check same origin\n    this.replaceEntry(this.current.window, url, state || {});\n    this.updateLocation(this.current.window, url);\n  }\n\n  // This method is available from Location.\n  get state() {\n    return this.current.pushState;\n  }\n\n\n  dump(output = process.stdout) {\n    for (let entry = this.first, i = 1; entry; entry = entry.next, ++i)\n      output.write(`${i}: ${URL.format(entry.url)}\\n`);\n  }\n}\n\n\n// Creates and returns a new history.\n//\n// browser - The browser object\n// focus   - The focus method, called when a new window is in focus\n//\n// Returns a function for opening a new window, which accepts:\n// name      - Window name (optional)\n// opener    - Opening window (window.open call)\n// parent    - Parent window (for frames)\n// url       - Set document location to this URL upon opening\nmodule.exports = function createHistory(browser, focus) {\n  assert(browser && browser.visit, 'Missing parameter browser');\n  assert(focus && focus.call, 'Missing parameter focus or not a function');\n  const history = new History(browser, focus);\n  return history.open.bind(history);\n};\n"]}