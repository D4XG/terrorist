{"version":3,"sources":["storage.js"],"names":["DOM","require","StorageEvent","Event","constructor","storage","url","key","oldValue","newValue","_storage","_url","_key","_oldValue","_newValue","storageArea","StorageArea","_items","_storages","_fire","source","window","event","location","href","dispatchEvent","length","size","index","iterator","keys","next","i","value","get","has","set","remove","delete","clear","pairs","toString","associate","push","Storage","area","_area","getItem","setItem","removeItem","dump","output","process","stdout","Storages","_locals","_sessions","local","host","session","extend","storages","localStorage","document","_localStorage","sessionStorage","_sessionStorage","domain","write","name","save","serialized","Date","toISOString","escape","join","load","item","split","unescape","trim","Error","type","module","exports"],"mappings":"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","file":"storage.js","sourcesContent":["// See [Web Storage](http://dev.w3.org/html5/webstorage/)\nconst DOM = require('./dom');\n\n\n// Implementation of the StorageEvent.\nclass StorageEvent extends DOM.Event {\n\n  constructor(storage, url, key, oldValue, newValue) {\n    super('storage');\n    this._storage   = storage;\n    this._url       = url;\n    this._key       = key;\n    this._oldValue  = oldValue;\n    this._newValue  = newValue;\n  }\n\n  get url() {\n    return this._url;\n  }\n  get storageArea() {\n    return this._storage;\n  }\n  get key() {\n    return this._key;\n  }\n  get oldValue() {\n    return this._oldValue;\n  }\n  get newValue() {\n    return this._newValue;\n  }\n}\n\n\n// Storage area. The storage area is shared by multiple documents of the same\n// origin. For session storage, they must also share the same browsing context.\nclass StorageArea {\n\n  constructor() {\n    this._items     = new Map()\n    this._storages  = [];\n  }\n\n  // Fire a storage event. Fire in all documents that share this storage area,\n  // except for the source document.\n  _fire(source, key, oldValue, newValue) {\n    for (let [storage, window] of this._storages) {\n      if (storage === source)\n        continue;\n      const event = new StorageEvent(storage, window.location.href, key, oldValue, newValue);\n      window.dispatchEvent(event);\n    }\n  }\n\n  // Return number of key/value pairs.\n  get length() {\n    return this._items.size;\n  }\n\n  // Get key by ordinal position.\n  key(index) {\n    const iterator = this._items.keys();\n    let   next = iterator.next();\n    for (let i = 0; i < index; ++i)\n      next = iterator.next();\n    return next.value;\n  }\n\n  // Get value from key\n  get(key) {\n    return this._items.has(key) ? this._items.get(key) : null;\n  }\n\n  // Set the value of a key. We also need the source storage (so we don't send\n  // it a storage event).\n  set(source, key, value) {\n    const oldValue = this._items.get(key);\n    this._items.set(key, value);\n    this._fire(source, key, oldValue, value);\n  }\n\n  // Remove the value at the key. We also need source storage (see set above).\n  remove(source, key) {\n    const oldValue = this._items.get(key);\n    this._items.delete(key);\n    this._fire(source, key, oldValue);\n  }\n\n  // Remove all values. We also need source storage (see set above).\n  clear(source) {\n    this._items.clear();\n    this._fire(source);\n  }\n\n  get pairs() {\n    return [...this._items];\n  }\n\n  toString() {\n    return this._items.toString();\n  }\n\n  // Associate local/sessionStorage and window with this storage area. Used when firing events.\n  associate(storage, window) {\n    this._storages.push([storage, window]);\n  }\n\n}\n\n\n// Implementation of the Storage interface, used by local and session storage.\nclass Storage {\n\n  constructor(area) {\n    this._area = area;\n  }\n\n  // ### storage.length => Number\n  //\n  // Returns the number of key/value pairs in this storage.\n  get length() {\n    return this._area.length;\n  }\n\n  // ### storage.key(index) => String\n  //\n  // Returns the key at this position.\n  key(index) {\n    return this._area.key(index);\n  }\n\n  // ### storage.getItem(key) => Object\n  //\n  // Returns item by key.\n  getItem(key) {\n    return this._area.get(key.toString());\n  }\n\n  // ### storage.setItem(key, Object)\n  //\n  // Add item or change value of existing item.\n  setItem(key, value) {\n    this._area.set(this, key.toString(), value);\n  }\n\n  // ### storage.removeItem(key)\n  //\n  // Remove item.\n  removeItem(key) {\n    this._area.remove(this, key.toString());\n  }\n\n  // ### storage.clear()\n  //\n  // Remove all items.\n  clear() {\n    this._area.clear(this);\n  }\n\n  // Dump to a string, useful for debugging.\n  dump(output = process.stdout) {\n    return this._area.dump(output);\n  }\n\n}\n\n\n\n\n// Combined local/session storage.\nclass Storages {\n\n  constructor() {\n    this._locals    = new Map();\n    this._sessions  = new Map();\n  }\n\n  // Return local Storage based on the document origin (hostname/port).\n  local(host) {\n    if (!this._locals.has(host))\n      this._locals.set(host, new StorageArea());\n    return new Storage(this._locals.get(host));\n  }\n\n  // Return session Storage based on the document origin (hostname/port).\n  session(host) {\n    if (!this._sessions.has(host))\n      this._sessions.set(host, new StorageArea());\n    return new Storage(this._sessions.get(host));\n  }\n\n  // Extend window with local/session storage support.\n  extend(window) {\n    const storages = this;\n    window.StorageEvent = StorageEvent;\n    Object.defineProperties(window, {\n      localStorage: {\n        get() {\n          const { document } = this;\n          if (!document._localStorage)\n            document._localStorage = storages.local(document.location.host);\n          return document._localStorage;\n        }\n      },\n\n      sessionStorage: {\n        get() {\n          const { document } = this;\n          if (!document._sessionStorage)\n            document._sessionStorage = storages.session(document.location.host);\n          return document._sessionStorage;\n        }\n      }\n    });\n  }\n\n  // Used to dump state to console (debuggin)\n  dump(output = process.stdout) {\n    for (let [domain, area] of this._locals) {\n      output.write(`${domain} local:\\n`);\n      for (let [name, value] of area.pairs)\n        output.write(`  ${name} = ${value}\\n`);\n    }\n    for (let [domain, area] of this._sessions) {\n      output.push(`${domain} session:\\n`);\n      for (let [name, value] of area.pairs)\n        output.write(`  ${name} = ${value}\\n`);\n    }\n  }\n\n  // browser.saveStorage uses this\n  save() {\n    const serialized = [`# Saved on ${new Date().toISOString()}`];\n    for (let [domain, area] of this._locals) {\n      let pairs = area.pairs;\n      if (pairs.length) {\n        serialized.push(`${domain} local:`);\n        for (let [name, value] of area.pairs)\n          serialized.push(`  ${escape(name)} = ${escape(value)}`);\n      }\n    }\n    for (let [domain, area] of this._sessions) {\n      let pairs = area.pairs;\n      if (pairs.length) {\n        serialized.push(`${domain} session:`);\n        for (let [name, value] of area.pairs)\n          serialized.push(`  ${escape(name)} = ${escape(value)}`);\n      }\n    }\n    return serialized.join('\\n') + '\\n';\n  }\n\n  // browser.loadStorage uses this\n  load(serialized) {\n    let storage = null;\n    for (let item of serialized.split(/\\n+/)) {\n      if (item[0] === '#' || item === '')\n        continue;\n      if (item[0] === ' ') {\n        const [key, value] = item.split('=');\n        if (storage)\n          storage.setItem(unescape(key.trim()), unescape(value.trim()));\n        else\n          throw new Error('Must specify storage type using local: or session:');\n      } else {\n        const [domain, type] = item.split(' ');\n        if (type === 'local:')\n          storage = this.local(domain);\n        else if (type === 'session:')\n          storage = this.session(domain);\n        else\n          throw new Error(`Unkown storage type ${type}`);\n      }\n    }\n  }\n}\n\n\nmodule.exports = Storages;\n\n"]}