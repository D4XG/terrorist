{"version":3,"sources":["dom/iframe.js"],"names":["DOM","require","URL","HTMLFrameElementImpl","HTMLElementImpl","idlUtils","loadFrame","frameImpl","_contentWindow","close","onload","contentWindow","removeEventListener","parentDocument","_ownerDocument","loadEventImpl","createEvent","initEvent","frame","wrapperForImpl","loadEvent","EventTarget","prototype","dispatchEvent","call","addEventListener","refreshAccessors","document","window","_defaultView","frames","querySelectorAll","i","_length","length","Array","forEach","__defineGetter__","refreshNameAccessor","name","getAttribute","_global","isInDocument","el","current","parentNode","implementation","_attrModified","value","oldVal","_detach","_attach","createHistory","parentWindow","defaultView","openWindow","browser","active","src","trim","url","resolve","parent","referrer","location","href"],"mappings":"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","file":"iframe.js","sourcesContent":["// Support for iframes.\n\n\nconst DOM                 = require('./index');\n// const resourceLoader      = require('jsdom/lib/jsdom/browser/resource-loader');\nconst URL                 = require('url');\nconst { HTMLFrameElementImpl,\n        HTMLElementImpl,\n        idlUtils }        = require('./impl');\n\n\nfunction loadFrame(frameImpl) {\n  // Close current content window in order to open a new one\n  if (frameImpl._contentWindow) {\n    frameImpl._contentWindow.close();\n    delete frameImpl._contentWindow;\n  }\n\n  function onload() {\n    frameImpl.contentWindow.removeEventListener('load', onload);\n    const parentDocument = frameImpl._ownerDocument;\n    const loadEventImpl = parentDocument.createEvent('HTMLEvents');\n    loadEventImpl.initEvent('load', false, false);\n\n    const frame = idlUtils.wrapperForImpl(frameImpl)\n    const loadEvent = idlUtils.wrapperForImpl(loadEventImpl)\n\n    DOM.EventTarget.prototype.dispatchEvent.call(frame, loadEvent)\n  }\n\n  // This is both an accessor to the contentWindow and a side-effect of creating\n  // the window and loading the document based on the value of frame.src\n  //\n  // Not happy about this hack\n  frameImpl.contentWindow.addEventListener('load', onload);\n}\n\n\nfunction refreshAccessors(document) {\n  const window = document._defaultView;\n  const frames = document.querySelectorAll('iframe,frame');\n  for (let i = 0; i < window._length; ++i)\n    delete window[i];\n  window._length = frames.length;\n  Array.prototype.forEach.call(frames, function (frame, i) {\n    window.__defineGetter__(i, ()=> frame.contentWindow );\n  });\n}\n\nfunction refreshNameAccessor(frame) {\n  const name = frame.getAttribute('name');\n  // https://html.spec.whatwg.org/multipage/browsers.html#named-access-on-the-window-object:supported-property-names\n  if (name) {\n    // I do not know why this only works with _global and not with _defaultView :(\n    const window = frame._ownerDocument._global;\n    delete window[name];\n    if (isInDocument(frame))\n      window.__defineGetter__(name, ()=> frame.contentWindow );\n  }\n}\n\nfunction isInDocument(el) {\n  const document = el._ownerDocument;\n  let   current = el;\n  while ((current = current.parentNode))\n    if (current === document)\n      return true;\n  return false;\n}\n\nHTMLFrameElementImpl.implementation.prototype._attrModified = function (name, value, oldVal) {\n  HTMLElementImpl.implementation.prototype._attrModified.call(this, name, value, oldVal);\n  if (name === 'name') {\n    if (oldVal)\n      // I do not know why this only works with _global and not with _defaultView :(\n      delete this._ownerDocument._global[oldVal];\n    refreshNameAccessor(this);\n  } else if (name === 'src' && value !== oldVal && isInDocument(this))\n    loadFrame(this);\n};\n\nHTMLFrameElementImpl.implementation.prototype._detach = function () {\n  HTMLElementImpl.implementation.prototype._detach.call(this);\n  if (this.contentWindow)\n    this.contentWindow.close();\n  refreshAccessors(this._ownerDocument);\n  refreshNameAccessor(this);\n};\n\nHTMLFrameElementImpl.implementation.prototype._attach = function () {\n  HTMLElementImpl.implementation.prototype._attach.call(this);\n  loadFrame(this);\n  refreshAccessors(this._ownerDocument);\n  refreshNameAccessor(this);\n};\n\nHTMLFrameElementImpl.implementation.prototype.__defineGetter__('contentDocument', function() {\n  return this.contentWindow.document;\n});\n\nHTMLFrameElementImpl.implementation.prototype.__defineGetter__('contentWindow', function() {\n  if (!this._contentWindow) {\n    const createHistory   = require('../history');\n    const parentDocument  = this._ownerDocument;\n    const parentWindow    = parentDocument.defaultView;\n\n    // Need to bypass JSDOM's window/document creation and use ours\n    const openWindow = createHistory(parentWindow.browser, (active)=> {\n      // Change the focus from window to active.\n      this._contentWindow = active;\n    });\n\n    const src = this.src.trim() === '' ? 'about:blank' : this.src;\n\n    this._contentWindow = openWindow({\n      name:     this.getAttribute('name'),\n      url:      URL.resolve(parentDocument.URL, src),\n      parent:   parentWindow,\n      referrer: parentWindow.location.href\n    });\n  }\n  return this._contentWindow;\n});\n"]}