{"version":3,"sources":["dom/scripts.js"],"names":["DOM","require","resourceLoader","reportException","VM","HTMLScriptElementImpl","Object","defineProperty","value","obj","privateData","_attach","constructor","prototype","call","script","document","ownerDocument","src","load","_eval","bind","filename","id","URL","executeInOrder","enqueue","executeInlineScript","readyState","process","nextTick","code","textContent","_poppedOffStackOfOpenElements","text","_alreadyStarted","typeString","_getTypeString","_defaultView","_ownerDocument","_runScripts","jsMIMETypes","has","toLowerCase","_writeAfterElement","processJavaScript","element","buffer","toString","window","defaultView","browser","top","runScripts","_currentScript","_evaluate","error","enhanceStackTrace","location","href","document_ref","partial","stack","line","split","indexOf","push","join"],"mappings":"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","file":"scripts.js","sourcesContent":["// For handling JavaScript, mostly improvements to JSDOM\n\nconst DOM             = require('./index');\nconst resourceLoader  = require('jsdom/lib/jsdom/browser/resource-loader');\nconst reportException = require('jsdom/lib/jsdom/living/helpers/runtime-script-errors');\nconst VM              = require('vm');\nconst {\n  HTMLScriptElementImpl\n}                     = require('./impl');\n\n// -- Patches to JSDOM --\nObject.defineProperty(HTMLScriptElementImpl, 'init', {\n  value: function(obj, privateData) {\n    obj._attach = function(){\n      Object.getPrototypeOf(this.constructor).prototype._attach.call(this)\n\n      const script    = this;\n      const document  = script.ownerDocument;\n\n      if (script.src)\n        // Script has a src attribute, load external resource.\n        resourceLoader.load(script, script.src, {}, _eval.bind(script));\n      else {\n        const filename = script.id ?  `${document.URL}:#${script.id}` : `${document.URL}:script`;\n        // Queue to be executed in order with all other scripts\n        const executeInOrder = resourceLoader.enqueue(script, filename, executeInlineScript);\n        // There are two scenarios:\n        // - script element added to existing document, we should evaluate it\n        //   immediately\n        // - inline script element parsed, when we get here, we still don't have\n        //   the element contents, so we have to wait before we can read and\n        //   execute it\n        if (document.readyState === 'loading')\n          process.nextTick(executeInOrder);\n        else\n          executeInOrder();\n      }\n\n      // Execute inline script\n      function executeInlineScript(code, filename) {\n        _eval.call(script, script.textContent, filename);\n        // script._eval(script.textContent, filename);\n      }\n\n    }\n    obj._poppedOffStackOfOpenElements = function(){\n      //not being used, causing double js execution\n    }\n  }\n});\n\n\nfunction _eval(text, filename) {\n  if (this._alreadyStarted) \n    return;\n  \n  this._alreadyStarted = true;\n  const typeString = this._getTypeString();\n  const _defaultView = this._ownerDocument._defaultView;\n  if (_defaultView && _defaultView._runScripts === 'dangerously' && jsMIMETypes.has(typeString.toLowerCase())) {\n    this._ownerDocument._writeAfterElement = this;\n    processJavaScript(this, text, filename);\n    delete this._ownerDocument._writeAfterElement;\n  }\n}\n\n\nfunction processJavaScript (element, buffer, filename) {\n  const code = buffer.toString();\n  // This may be called without code, e.g. script element that has no body yet\n  if (!code)\n    return;\n\n  // Surpress JavaScript validation and execution\n  const document = element.ownerDocument;\n  const window   = document.defaultView;\n  const browser  = window.top.browser;\n  if (browser && !browser.runScripts)\n    return;\n\n  // This may be called without code, e.g. script element that has no body yet\n  try {\n    window.document._currentScript = element;\n    window._evaluate(code, filename);\n  } catch (error) {\n    enhanceStackTrace(error, document.location.href);\n    reportException(window, error);\n  } finally {\n    window.document._currentScript = null;\n  }\n};\n\nfunction enhanceStackTrace(error, document_ref) {\n  const partial = [];\n  // \"RangeError: Maximum call stack size exceeded\" doesn't have a stack trace\n  if (error.stack)\n    for (let line of error.stack.split('\\n')) {\n      if (~line.indexOf('vm.js'))\n        break;\n      partial.push(line);\n    }\n  partial.push(`    in ${document_ref}`);\n  error.stack = partial.join('\\n');\n  return error;\n}\n\nconst jsMIMETypes = new Set([\n  'application/ecmascript',\n  'application/javascript',\n  'application/x-ecmascript',\n  'application/x-javascript',\n  'text/ecmascript',\n  'text/javascript',\n  'text/javascript1.0',\n  'text/javascript1.1',\n  'text/javascript1.2',\n  'text/javascript1.3',\n  'text/javascript1.4',\n  'text/javascript1.5',\n  'text/jscript',\n  'text/livescript',\n  'text/x-ecmascript',\n  'text/x-javascript'\n]);\n"]}