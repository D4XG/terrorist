"use strict";
exports.__esModule = true;
var crypto_1 = require("crypto");
function randomString(size, charset) {
    if (size !== undefined && size <= 0) {
        throw new Error("Random size must be a number above 0!");
    }
    var bytes = crypto_1.randomBytes(size || 10);
    var chars = charset || "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    var value = "";
    for (var i = 0, len = bytes.length; i < len; i++) {
        value += chars[bytes.readUInt8(i) % chars.length];
    }
    return value;
}
exports.randomString = randomString;
function randomNumber(options) {
    if (options === void 0) { options = {}; }
    var integerLimit = Number.MAX_SAFE_INTEGER;
    options.min = options.min || 0;
    options.max = options.max || integerLimit;
    if (options.min < 0 ||
        options.min > integerLimit - 1 ||
        options.max < 1 ||
        options.max > integerLimit) {
        throw new Error("Limits must be between 0 and " + integerLimit);
    }
    var hex = crypto_1.randomBytes(16).toString("hex");
    var integer = parseInt(hex, 16);
    var random = integer / 0xffffffffffffffffffffffffffffffff;
    return Math.floor(random * (options.max - options.min + 1) + options.min);
}
exports.randomNumber = randomNumber;
function randomKey(length) {
    if (length === void 0) { length = 64; }
    if (length < 2 || length % 2 !== 0) {
        throw new TypeError("Length must be an even number above 0");
    }
    return crypto_1.randomBytes(length / 2).toString("hex");
}
exports.randomKey = randomKey;
